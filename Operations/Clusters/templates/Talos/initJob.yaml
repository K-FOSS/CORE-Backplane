
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: generate-talos-config-secret
    app.kubernetes.io/instance: mycluster
    app.kubernetes.io/name: talos
    argocd.argoproj.io/instance: dc1-k3s-node1-ops-cluster
    cluster.x-k8s.io/cluster-name: infra-test
  name: generate-talos-config-test
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: generate-talos-config-secret
        app.kubernetes.io/instance: mycluster
        app.kubernetes.io/name: talos
        cluster.x-k8s.io/cluster-name: infra-test
    spec:
      containers:
        - args:
            - create
            - secret
            - generic
            - $(CLUSTER_NAME)
            - '--from-file=controlplane.yaml'
            - '--from-file=worker.yaml'
            - '--from-file=controlplane-base64'
            - '--from-file=worker-base64'
            - '--from-file=talosconfig'
          envFrom:
            - configMapRef:
                name: config-c8f4bgtk67
          image: docker.io/bitnami/kubectl:1.29.7
          name: kubectl-create-secret
          volumeMounts:
            - mountPath: /talos-config
              name: talos-config
          workingDir: /talos-config
      initContainers:
        - args:
            - gen
            - config
            - $(CLUSTER_NAME)
            - https://$(CONTROLPLANE_SERVICE_FQDN):$(CONTROLPLANE_SERVICE_PORT)
            - '--with-docs=false'
            - '--with-examples=false'
            - '--with-cluster-discovery=false'
            - '--with-kubespan=false'
            - '--additional-sans="$(CONTROLPLANE_SERVICE_FQDN)"'
            - '--additional-sans="localhost"'
            - |-
              --config-patch=
                [
                   {
                      "op":"add",
                      "path":"/machine/features/hostDNS/forwardKubeDNSToHost",
                      "value":true
                   },
                   {
                      "op":"add",
                      "path":"/debug",
                      "value":true
                   },
                   {
                      "op":"add",
                      "path":"/machine/features/hostDNS/resolveMemberNames",
                      "value":true
                   },
                   {
                      "op":"add",
                      "path":"/machine/features/kubePrism",
                      "value": {"enabled": false}
                   },
                   {
                      "op":"replace",
                      "path":"/cluster/network/podSubnets",
                      "value": ["10.3.0.1/16"]
                   },
                   {
                      "op":"replace",
                      "path":"/cluster/network/serviceSubnets",
                      "value": ["10.2.0.1/16"]
                   }
                ]
            - '--dns-domain=$(CLUSTER_DOMAIN)'
          envFrom:
            - configMapRef:
                name: config-c8f4bgtk67
          image: ghcr.io/siderolabs/talosctl:v1.7.6
          name: talos-gen-config
          volumeMounts:
            - mountPath: /talos-config
              name: talos-config
          workingDir: /talos-config
        - command:
            - sh
            - '-ec'
            - |-
              cat controlplane.yaml | base64 > controlplane-base64
              cat worker.yaml | base64 > worker-base64
          envFrom:
            - configMapRef:
                name: config-c8f4bgtk67
          image: docker.io/library/alpine
          name: base64-encode
          volumeMounts:
            - mountPath: /talos-config
              name: talos-config
          workingDir: /talos-config
      restartPolicy: OnFailure
      serviceAccountName: generate-talos-config-secret
      volumes:
        - name: talos-config

