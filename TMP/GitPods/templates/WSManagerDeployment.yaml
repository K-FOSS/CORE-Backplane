# apps/v1/Deployment ws-manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-manager

  labels:
    app: gitpod
    component: ws-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: ws-manager
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 19accd3450fabe9af151df212431a4ecf894330995572994eee4ee99fc9a816b
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_workspace_services
                operator: Exists
      containers:
        - name: ws-manager

          {{- with .Values.wsmanager.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          args:
            - run
            - --config
            - /config/config.json
          env:
            - name: GITPOD_DOMAIN
              value: gitpods.writemy.codes
            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default
            - name: GITPOD_REGION
              value: us-east-1
            - name: HOST_URL
              value: https://gitpods.writemy.codes
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_DOMAIN
              value: svc.k0s.resolvemy.host
            - name: LOG_LEVEL
              value: debug
            - name: JAEGER_ENDPOINT
              value: http://k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev:14268/api/traces
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "0.025"
            - name: GRPC_GO_RETRY
              value: "on"

          
          ports:
            - containerPort: 8080
              name: rpc
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
          securityContext:
            privileged: false
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: true

            - mountPath: /workspace-templates
              name: workspace-template
              readOnly: true

            - mountPath: /ws-daemon-tls-certs
              name: ws-daemon-tls-certs
              readOnly: true

            - mountPath: /certs
              name: tls-certs
              readOnly: true

            - mountPath: /mnt/secrets/storage
              name: storage-volume
              readOnly: true


        - name: kube-rbac-proxy

          image: quay.io/brancz/kube-rbac-proxy:v0.12.0

          args:
            - --v=5
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP


          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      priorityClassName: system-node-critical
      securityContext:
        runAsUser: 31002
      serviceAccountName: ws-manager

      volumes:
        - configMap:
            name: ws-manager
          name: config

        - configMap:
            name: workspace-templates
          name: workspace-template

        - name: ws-daemon-tls-certs
          secret:
            secretName: ws-daemon-tls

        - name: tls-certs
          secret:
            secretName: ws-manager-tls

        - name: storage-volume
          secret:
            secretName: storage-s3
