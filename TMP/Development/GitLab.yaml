apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-development-gitlab
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
            environment: 'prod'
            ingress: git.writemy.codes
  template:
    metadata:
      name: '{{cluster}}-gitlab'
    spec:
      project: core

      source:
        repoURL: https://charts.gitlab.io
        chart: gitlab
        path: gitlab
        targetRevision: 5.9.2
        helm:
          releaseName: gitlab-{{ environment }}
          parameters:
            - name: config.generateTLS
              value: 'false'
          values: |
            certmanager:
              install: false
              installCRDs: false
            gitlab-runner:
              enabled: false
              runners:
                cache:
                  secretName: runner-s3
                config: |
                  [[runners]]
                    [runners.kubernetes]
                    image = "ubuntu:18.04"
                    [runners.cache]
                      Type = "s3"
                      Path = "runner"
                      Shared = true
                      [runners.cache.s3]
                        ServerAddress = "s3.writemy.codes"
                        BucketName = "my_bucket_name"
                        BucketLocation = "runners-cache"
                        Insecure = false
                        AuthenticationType = "access-key"
            global:
              appConfig:

                artifacts:
                  bucket: 56c4bfd0-20f8-93d7-476f-a86435dde7df-w8qn40

                dependencyProxy:
                  bucket: b5085eee-d81c-6a15-4a33-6a32a2c325d0-9ejn31
                  enabled: true

                externalDiffs:
                  bucket: 4781a816-7416-d012-9a2a-6dbe65624e17-ykv7qk
                  enabled: true

                gitlab_kas:
                  enabled: true
                  secret: gitlab-kas-{{ environment }}

                ldap:
                  servers:
                    main:
                      active_directory: false
                      attributes:
                        email: mail
                        first_name: cn
                        last_name: name
                        name: cn
                        username: cn
                      base: ou=users,dc=ldap,dc=mylogin,dc=space
                      bind_dn: cn=GitLab,ou=users,dc=ldap,dc=mylogin,dc=space
                      encryption: simple_tls
                      group_base: ou=groups,dc=ldap,dc=mylogin,dc=space
                      host: ldap.mylogin.space
                      label: Authentik LDAP
                      password:
                        key: LDAPPassword
                        secret: gitlab-ldap-{{ environment }}
                      port: 636
                      uid: cn
                lfs:
                  bucket: 623579a1-8adc-0b12-dd3f-f24793c3a00f-imy3gs
                object_store:
                  connection:
                    key: connection
                    secret: gitlab-s3-{{ environment }}
                  enabled: true
                omniauth:
                  allowBypassTwoFactor: null
                  allowSingleSignOn:
                    - openid_connect
                  autoLinkLdapUser: true
                  autoLinkUser:
                    - saml
                  enabled: true
                  externalProviders: null
                  providers:
                    - secret: gitlab-oidc-{{ environment }}
                  syncProfileFromProvider: null
                terraformState:
                  bucket: 29f1e5ee-1b9c-14da-cc79-6ebe911caa7b-p3e18b
                  enabled: true

              edition: ce
              gitaly:
                external: null
              hosts:
                domain: git.writemy.codes
              ingress:
                annotations:
                  cert-manager.io/cluster-issuer: letsencrypt-prod
                  external-dns.alpha.kubernetes.io/target: dc1-k8s.resolvemy.host.
                  traefik.ingress.kubernetes.io/router.entrypoints: websecure
                  traefik.ingress.kubernetes.io/router.tls: 'true'
                class: traefik-core
                configureCertmanager: false
                provider: traefik-core
                tls:
                  enabled: true
                  secretName: gitlab-certificate
              kas:
                enabled: true
              minio:
                enabled: false
              praefect:
                dbSecret:
                  key: DatabasePassword
                  secret: gitlab-praefect-database-{{ environment }}
                enabled: true
                psql:
                  dbName: <secret:CORE0_SITE1/data/GitLab~PraefectDatabase>
                  host: psql.service.dc1.kjdev
                  port: 5432
                  user: <secret:CORE0_SITE1/data/GitLab~PraefectDatabase>

              psql:
                database: <secret:CORE0_SITE1/data/GitLab~DatabaseUsername>
                host: psql.service.dc1.kjdev
                password:
                  key: DatabasePassword
                  secret: gitlab-database-secrets
                  useSecret: true
                port: 5432
                username: <secret:CORE0_SITE1/data/GitLab~DatabaseUsername>

              redis:
                host: 10.1.1.68
                password:
                  enabled: false
              shell:
                authToken:
                  key: shared_secret
                  secret: gitlab-shell-{{ environment }}

              tracing:
                connection:
                  string: >-
                    opentracing://jaeger?http_endpoint=http%3A%2F%2Fk0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.kjdev%3A14268%2Fapi%2Ftraces&sampler=probabalistic&sampler_param=0.25
              workhorse:
                secret: gitlab-workhorse-{{ environment }}
                key: shared_secret

            nginx-ingress:
              enabled: false

            postgresql:
              install: false

            prometheus:
              install: false

            redis:
              install: false
              sysctlImage:
                enabled: false
              usePasswordFile: false

            registry:
              enabled: false

            upgradeCheck:
              tolerations: null

      destination:
        server: '{{url}}'
        namespace: core-prod
