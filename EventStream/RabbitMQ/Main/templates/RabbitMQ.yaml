apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 3

  service:
    type: ClusterIP
    annotations:
      external-dns.alpha.kubernetes.io/hostname: 'mqtt.mylogin.space'

  resources:
    requests:
      cpu: '1'
      memory: 2Gi
    limits:
      cpu: '4'
      memory: 10Gi

  override:
    service:
      metadata:
        labels:
          wan-mode: 'public'
    statefulSet:
      spec:
        template:
          spec:
            containers:
              - name: rabbitmq
                env:

                  - name: USERNAME
                    valueFrom:
                      secretKeyRef:
                        name: {{ .Release.Name }}-sso
                        key: username

                  - name: PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: {{ .Release.Name }}-sso
                        key: password

  rabbitmq:
    additionalPlugins:
      - rabbitmq_auth_backend_ldap
      - rabbitmq_mqtt
    #   - rabbitmq_federation
    #   - rabbitmq_federation_management
    advancedConfig: |
      [{rabbitmq_auth_backend_ldap,[
          {vhost_access_query,    {in_group,
                                    "ou=${vhost}-users,ou=vhosts,dc=example,dc=com"}},
          {resource_access_query,
            {for, [{permission, configure, {in_group, "cn=authentik Admins,ou=groups,dc=ldap,dc=mylogin,dc=space"}},
                  {permission, write,
                    {for, [{resource, queue,    {in_group, "cn=authentik Admins,ou=groups,dc=ldap,dc=mylogin,dc=space"}},
                          {resource, exchange, {constant, true}}]}},
                  {permission, read,
                    {for, [{resource, exchange, {in_group, "cn=authentik Admins,ou=groups,dc=ldap,dc=mylogin,dc=space"}},
                          {resource, queue,    {constant, true}}]}}
                  ]
            }},
          {topic_access_query,
            {for, [{permission, write, {match, {string, "${routing_key}"}, {string, "^a"}}},
                  {permission, read,  {constant, true}}
                  ]
            }},
          {tag_queries,           [{administrator, {constant, false}},
                                    {management,    {constant, true}}]}
      ]}].


    additionalConfig: |
      cluster_partition_handling = pause_minority
      disk_free_limit.relative = 1.0
      collect_statistics_interval = 10000
      auth_backends.1 = ldap
      auth_ldap.servers.1 = ldap.mylogin.space
      auth_ldap.use_ssl    = false
      auth_ldap.port       = 389
      auth_ldap.log        = true

      auth_ldap.other_bind.user_dn = cn=$(USERNAME),ou=users,dc=ldap,dc=mylogin,dc=space
      auth_ldap.other_bind.password = $(PASSWORD)

      auth_ldap.dn_lookup_attribute = cn
      auth_ldap.dn_lookup_base = ou=users,dc=ldap,dc=mylogin,dc=space

      auth_ldap.user_dn_pattern = cn=${username},ou=users,dc=ldap,dc=mylogin,dc=space

      mqtt.listeners.tcp.default = 1883
      mqtt.allow_anonymous = false