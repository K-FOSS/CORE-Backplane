# apps/v1/Deployment server
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gitpod
    component: server
  name: server
  namespace: core-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: c00844dd7caea8ef13cd7cae01f6a0f13d5b90ad704fc8b7a6287b9d59aa6b88
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_meta
                operator: Exists
      containers:
        - name: server

          image: registry.writemy.codes/workspaces/gitpod-core-dev/build/server:commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca
          imagePullPolicy: IfNotPresent

          env:
            - name: GITPOD_DOMAIN
              value: gitpods.writemy.codes

            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default

            - name: GITPOD_REGION
              value: us-east-1

            - name: HOST_URL
              value: https://gitpods.writemy.codes

            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: KUBE_DOMAIN
              value: svc.k0s.resolvemy.host

            - name: LOG_LEVEL
              value: debug

            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: mysql

            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: mysql

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql

            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql

            - name: DB_ENCRYPTION_KEYS
              valueFrom:
                secretKeyRef:
                  key: encryptionKeys
                  name: mysql

            - name: DB_DELETED_ENTRIES_GC_ENABLED
              value: "false"

            - name: JAEGER_ENDPOINT
              value: http://k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev:14268/api/traces

            - name: JAEGER_SAMPLER_TYPE
              value: const

            - name: JAEGER_SAMPLER_PARAM
              value: "1"

            - name: MESSAGEBUS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: rabbitmq

            - name: MESSAGEBUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: rabbitmq

            - name: MESSAGEBUS_CA
              valueFrom:
                secretKeyRef:
                  key: ca.crt
                  name: messagebus-certificates-secret-core

            - name: MESSAGEBUS_CERT
              valueFrom:
                secretKeyRef:
                  key: tls.crt
                  name: messagebus-certificates-secret-core

            - name: MESSAGEBUS_KEY
              valueFrom:
                secretKeyRef:
                  key: tls.key
                  name: messagebus-certificates-secret-core

            - name: CONFIG_PATH
              value: /config/config.json

            - name: GITPOD_LICENSE_TYPE
              value: gitpod

            - name: IDE_CONFIG_PATH
              value: /ide-config/config.json

            - name: NODE_ENV
              value: production

            - name: SHLVL
              value: "1"

            - name: WSMAN_CFG_MANAGERS
              value: WwogIHsKICAgICJuYW1lIjogImRlZmF1bHQiLAogICAgInVybCI6ICJkbnM6Ly8vd3MtbWFuYWdlcjo4MDgwIiwKICAgICJ0bHMiOiB7CiAgICAgICJjYSI6ICIvd3MtbWFuYWdlci1jbGllbnQtdGxzLWNlcnRzL2NhLmNydCIsCiAgICAgICJjcnQiOiAiL3dzLW1hbmFnZXItY2xpZW50LXRscy1jZXJ0cy90bHMuY3J0IiwKICAgICAgImtleSI6ICIvd3MtbWFuYWdlci1jbGllbnQtdGxzLWNlcnRzL3Rscy5rZXkiCiAgICB9LAogICAgInN0YXRlIjogImF2YWlsYWJsZSIsCiAgICAibWF4U2NvcmUiOiAxMDAsCiAgICAic2NvcmUiOiA1MCwKICAgICJnb3Zlcm4iOiB0cnVlLAogICAgImFkbWlzc2lvbkNvbnN0cmFpbnRzIjogbnVsbAogIH0KXQ==

          
          ports:
            - containerPort: 3000
              name: http

            - containerPort: 9500
              name: metrics

            - containerPort: 9000
              name: install-admin

            - containerPort: 6060
              name: debug

            - containerPort: 9229
              name: debugnode

          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            privileged: false
            runAsUser: 31001
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: true
            - mountPath: /ide-config
              name: ide-config
              readOnly: true
            - mountPath: /ws-manager-client-tls-certs
              name: ws-manager-client-tls-certs
              readOnly: true
            - mountPath: /gitpod/auth-providers/gitlab-auth
              name: auth-provider-0
              readOnly: true

        - name: kube-rbac-proxy

          image: quay.io/brancz/kube-rbac-proxy:v0.12.0

          args:
            - --v=5
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/

          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          
          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      initContainers:
        - name: database-waiter

          image: registry.writemy.codes/workspaces/gitpod-core-dev/build/service-waiter:commit-df6f9b5ab510202c5719724d67c00bff8ee83000

          args:
            - -v
            - database
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: mysql

            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: mysql

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql

            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql

            - name: DB_ENCRYPTION_KEYS
              valueFrom:
                secretKeyRef:
                  key: encryptionKeys
                  name: mysql

            - name: DB_DELETED_ENTRIES_GC_ENABLED
              value: "false"
          
          resources: {}
          securityContext:
            privileged: false
            runAsUser: 31001


        - name: msgbus-waiter

          image: registry.writemy.codes/workspaces/gitpod-core-dev/build/service-waiter:commit-df6f9b5ab510202c5719724d67c00bff8ee83000

          args:
            - -v
            - messagebus
          env:
            - name: MESSAGEBUS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: rabbitmq

            - name: MESSAGEBUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: rabbitmq

            - name: MESSAGEBUS_CA
              valueFrom:
                secretKeyRef:
                  key: ca.crt
                  name: messagebus-certificates-secret-core

            - name: MESSAGEBUS_CERT
              valueFrom:
                secretKeyRef:
                  key: tls.crt
                  name: messagebus-certificates-secret-core

            - name: MESSAGEBUS_KEY
              valueFrom:
                secretKeyRef:
                  key: tls.key
                  name: messagebus-certificates-secret-core

          
          resources: {}
          securityContext:
            privileged: false
            runAsUser: 31001
      priorityClassName: system-node-critical
      serviceAccountName: server
      volumes:
        - configMap:
            name: server-config
          name: config

        - configMap:
            name: server-ide-config
          name: ide-config

        - name: ws-manager-client-tls-certs
          secret:
            secretName: ws-manager-client-tls

        - name: auth-provider-0
          secret:
            secretName: gitlab-auth
