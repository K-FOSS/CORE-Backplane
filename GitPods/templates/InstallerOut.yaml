{{`
# v1/ConfigMap gitpod-app
apiVersion: v1
data:
  app.yaml: |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: builtin-registry-certs
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: docker-registry
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: builtin-registry-auth
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: docker-registry
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: gitpod-selfsigned-issuer
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: ca-issuer-ca
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: ca-issuer
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: core-prod-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: core-prod-ns-psp:privileged
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: core-prod-ns-psp:restricted-root-user
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: core-prod-ns-psp:unprivileged
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
        apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      name: core-prod-ns-privileged
      namespace: core-prod
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: unconfined
        apparmor.security.beta.kubernetes.io/defaultProfileName: unconfined
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default,unconfined
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      name: core-prod-ns-privileged-unconfined
      namespace: core-prod
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
        apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      name: core-prod-ns-restricted-root-user
      namespace: core-prod
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
        apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      name: core-prod-ns-unprivileged
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      creationTimestamp: null
      name: gitpod-resource-quota
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      name: core-prod-ns-nobody
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: nobody
      name: nobody
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: core-prod
    ---
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod-telemetry
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
        kind: service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: content-service
      name: content-service
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: dashboard
      name: dashboard
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: dashboard
      name: dashboard-deny-all-allow-explicit
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: dashboard
      name: dashboard
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: dashboard
        kind: service
      name: dashboard
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: dashboard
      name: dashboard
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: db-init-scripts
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: db
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: db-password
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: mysql
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: db
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: db
      name: db
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
        kind: service
      name: ide-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: migrations
      name: migrations
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: migrations
      name: migrations
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: minio
      name: minio
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy-config
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: core-prod-openvsx-proxy-kube-rbac-proxy
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
        kind: service
      name: openvsx-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: proxy-config
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: proxy
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: proxy-deny-all-allow-explicit
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: core-prod-proxy-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        cloud.google.com/neg: '{"exposed_ports": {"80":{},"443": {}}}'
        external-dns.alpha.kubernetes.io/hostname: gitpods.writemy.codes,*.gitpods.writemy.codes,*.ws.gitpods.writemy.codes
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
        kind: service
      name: proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: proxy
      name: proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: rabbitmq
      name: rabbitmq
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: rabbitmq
      name: messagebus-erlang-cookie
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: rabbitmq
      name: messagebus-certificates-secret-core
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server-config
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server-ide-config
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: core-prod-server-rb-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server-unprivileged
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
        kind: service
      name: server
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager-bridge
      name: ws-manager-bridge-config
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager-bridge
      name: ws-manager-bridge
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager-bridge
      name: core-prod-ws-manager-bridge-rb-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager-bridge
      name: ws-manager-bridge
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager-bridge
      name: ws-manager-bridge
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      annotations:
        gitpod.io/checksum_config: 8844a70ad63dd38c01df5c620461eb34fd52f2104b1da196c8fe504b4ab6f0ba
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: core-prod-agent-smith-rb-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: agent-smith
      name: agent-smith
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: core-prod-blobserve-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
        kind: service
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: core-prod-ns-registry-facade
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: registry-facade
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: registry-facade
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: registry-facade
      namespace: core-prod
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
        apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: core-prod-ns-registry-facade
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: core-prod-registry-facade-rb
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: core-prod-registry-facade-kube-rbac-proxy
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: builtin-registry-facade-cert
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
        kind: service
      name: registry-facade
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: registry-facade
      name: registry-facade
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: workspace
      name: workspace-default
      namespace: core-prod
    ---
    apiVersion: policy/v1beta1
    kind: PodSecurityPolicy
    metadata:
      annotations:
        apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default,unconfined
        apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
        seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
      creationTimestamp: null
      name: core-prod-ns-workspace
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: workspace
      name: workspace
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: workspace
      name: workspace
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: workspace
      name: workspace
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: core-prod-ns-ws-daemon
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: ws-daemon
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: ws-daemon
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: ws-daemon
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: ws-daemon
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: core-prod-ws-daemon-rb-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: core-prod-ws-daemon-rb
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
        kind: service
      name: ws-daemon
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
      name: ws-daemon-tls
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: workspace-templates
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: core-prod-ws-manager-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
        kind: service
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager-tls
      namespace: core-prod
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-manager
      name: ws-manager-unpriviledged
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: core-prod-ws-proxy-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy-api
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
        kind: service
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-proxy
      name: ws-proxy
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: core-prod-ns-image-builder-mk3
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: image-builder-mk3-config
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: image-builder-mk3
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: image-builder-mk3
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: image-builder-mk3
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: core-prod-image-builder-mk3-proxy-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
        kind: service
      name: image-builder-mk3
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: image-builder-mk3
      name: image-builder-mk3
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-1.16.0
        heritage: Helm
        release: docker-registry
      name: registry-secret
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-1.16.0
        heritage: Helm
        release: docker-registry
      name: registry-config
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-1.16.0
        heritage: Helm
        release: docker-registry
      name: registry
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-1.16.0
        heritage: Helm
        release: docker-registry
      name: registry
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: MySQL
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.1.2
      name: mysql
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: MySQL
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.1.2
      name: mysql-headless
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: MySQL
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.1.2
      name: mysql
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: MySQL
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-9.1.2
      name: mysql
      namespace: core-prod
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus
      namespace: core-prod
    ---
    apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: rabbitmq
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus-config
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: load-definition
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: rabbitmq
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus-endpoint-reader
      namespace: core-prod
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus-endpoint-reader
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus-headless
      namespace: core-prod
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus
      namespace: core-prod
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: RabbitMQ
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: rabbitmq
        helm.sh/chart: rabbitmq-10.1.1
      name: messagebus
      namespace: core-prod
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod-app
      name: gitpod-app
      namespace: core-prod
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod-app
  name: gitpod-app
  namespace: core-prod

---
# v1/ConfigMap openvsx-proxy-config
apiVersion: v1
data:
  config.json: |-
    {
      "log_debug": false,
      "cache_duration_regular": "5m0s",
      "cache_duration_backup": "72h0m0s",
      "url_upstream": "https://open-vsx.gitpods.writemy.codes",
      "url_local": "https://open-vsx.gitpods.writemy.codes",
      "max_idle_conns": 1000,
      "max_idle_conns_per_host": 1000,
      "redis_addr": "localhost:6379",
      "prometheusAddr": ":9500"
    }
  redis.conf: "\nmaxmemory 100mb\nmaxmemory-policy allkeys-lfu\n\t"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy-config
  namespace: core-prod
---
# v1/ConfigMap workspace-templates
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ws-manager
  name: workspace-templates
  namespace: core-prod
---
# v1/ConfigMap blobserve
apiVersion: v1
data:
  config.json: |-
    {
      "blobserve": {
        "port": 32224,
        "timeout": "5s",
        "repos": {
          "registry.writemy.codes/workspaces/gitpod-core-dev/build/ide/code": {
            "workdir": "/ide",
            "replacements": [
              {
                "path": "/ide/out/vs/workbench/workbench.web.api.js",
                "search": "vscode-webview.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "vscode-webview.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/services/extensions/worker/extensionHostWorker.js",
                "search": "vscode-webview.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.api.js",
                "search": "vscode-cdn.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "vscode-cdn.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/services/extensions/worker/extensionHostWorker.js",
                "search": "vscode-cdn.net",
                "replacement": "gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.api.js",
                "search": "open-vsx.org",
                "replacement": "open-vsx.gitpods.writemy.codes"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "open-vsx.org",
                "replacement": "open-vsx.gitpods.writemy.codes"
              }
            ],
            "inlineStatic": [
              {
                "search": "${window.location.origin}",
                "replacement": "."
              },
              {
                "search": "value.startsWith(window.location.origin)",
                "replacement": "value.startsWith(window.location.origin) || value.startsWith('${ide}')"
              },
              {
                "search": "./out",
                "replacement": "${ide}/out"
              },
              {
                "search": "./node_modules",
                "replacement": "${ide}/node_modules"
              },
              {
                "search": "/_supervisor/frontend",
                "replacement": "${supervisor}"
              }
            ]
          },
          "registry.writemy.codes/workspaces/gitpod-core-dev/build/supervisor": {
            "workdir": "/.supervisor/frontend"
          }
        },
        "allowAnyRepo": false,
        "blobSpace": {
          "location": "/mnt/cache/blobserve",
          "maxSizeBytes": 1073741824
        }
      },
      "dockerAuth": "/mnt/pull-secret.json",
      "pprofAddr": ":6060",
      "prometheusAddr": "127.0.0.1:9500",
      "readinessProbeAddr": ":8086"
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: core-prod
---
# v1/ConfigMap ws-manager-bridge-config
apiVersion: v1
data:
  ws-manager-bridge.json: |-
    {
      "installation": "default",
      "staticBridges": [
        {
          "name": "default",
          "url": "dns:///ws-manager:8080",
          "tls": {
            "ca": "/ws-manager-client-tls-certs/ca.crt",
            "crt": "/ws-manager-client-tls-certs/tls.crt",
            "key": "/ws-manager-client-tls-certs/tls.key"
          },
          "state": "available",
          "maxScore": 100,
          "score": 50,
          "govern": true,
          "admissionConstraints": null
        }
      ],
      "clusterService": {
        "port": 8080,
        "host": "localhost"
      },
      "wsClusterDBReconcileIntervalSeconds": 60,
      "controllerIntervalSeconds": 60,
      "controllerMaxDisconnectSeconds": 150,
      "maxTimeToRunningPhaseSeconds": 0,
      "emulatePreparingIntervalSeconds": 10,
      "timeouts": {
        "metaInstanceCheckIntervalSeconds": 60,
        "preparingPhaseSeconds": 3600,
        "stoppingPhaseSeconds": 3600,
        "buildingPhaseSeconds": 3600,
        "unknownPhaseSeconds": 600
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ws-manager-bridge
  name: ws-manager-bridge-config
  namespace: core-prod
---
# v1/ConfigMap content-service
apiVersion: v1
data:
  config.json: |-
    {
      "service": {
        "address": ":8080",
        "tls": null
      },
      "storage": {
        "stage": "",
        "kind": "minio",
        "gcloud": {
          "credentialsFile": "",
          "region": "",
          "projectId": "",
          "maximumBackupCount": 0
        },
        "minio": {
          "endpoint": "s3.mylogin.space",
          "accessKey": "",
          "accessKeyFile": "/mnt/secrets/storage/accessKeyId",
          "secretKey": "",
          "secretKeyFile": "/mnt/secrets/storage/secretAccessKey",
          "secure": true,
          "region": "us-east-1",
          "parallelUpload": 100
        },
        "backupTrail": {
          "enabled": true,
          "maxLength": 3
        },
        "blobQuota": 5368709120
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: content-service
  name: content-service
  namespace: core-prod
---
# v1/ConfigMap proxy-config
apiVersion: v1
data:
  vhost.docker-registry: |-
    https://registry.gitpods.writemy.codes {
        import enable_log
        import remove_server_header
        import ssl_configuration

        basicauth bcrypt "Docker Registry" {
            1PIpa2NafWRrCQXVyFcU JDJhJDEwJDY0SkRWT2F2Tm9ML0czV3ZFdFdXNi5rejE0M1J6dW5OYkZoeEhVVGlWblZhek1ZL1lxUTVp
        }

        reverse_proxy https://registry.core-prod.svc.k0s.resolvemy.host {
            flush_interval -1
            transport http {
                tls_trusted_ca_certs /etc/caddy/registry-certs/ca.crt
            }
        }
    }
  vhost.empty: '# Placeholder to avoid errors loading files using a glob pattern'
  vhost.ide-proxy: |-
    https://ide.gitpods.writemy.codes {
        import enable_log_debug
        import remove_server_header
        import ssl_configuration

        reverse_proxy  {
            to ide-proxy.core-prod.svc.k0s.resolvemy.host:80
        }
    }
  vhost.minio: |-
    https://minio.gitpods.writemy.codes {
        import enable_log
        import remove_server_header
        import ssl_configuration

        reverse_proxy minio.core-prod.svc.k0s.resolvemy.host:9001 {
            flush_interval -1
        }
    }
  vhost.open-vsx: |-
    https://open-vsx.gitpods.writemy.codes {
        import enable_log_debug
        import remove_server_header
        import ssl_configuration

        reverse_proxy  {
            to openvsx-proxy.core-prod.svc.k0s.resolvemy.host:8080
        }
    }
  vhost.payment-endpoint: |-
    https://payment.gitpods.writemy.codes {
        import enable_log
        import remove_server_header
        import ssl_configuration
        import debug_headers

        reverse_proxy payment-endpoint.core-prod.svc.k0s.resolvemy.host:3002 {
            import upstream_headers
            import upstream_connection
        }

        handle_errors {
            respond "Internal Server Error" 500
        }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: proxy
  name: proxy-config
  namespace: core-prod
---
# v1/ConfigMap image-builder-mk3-config
apiVersion: v1
data:
  image-builder.json: |-
    {
      "orchestrator": {
        "wsman": {
          "address": "ws-manager:8080",
          "tls": {
            "ca": "/wsman-certs/ca.crt",
            "crt": "/wsman-certs/tls.crt",
            "key": "/wsman-certs/tls.key"
          }
        },
        "pullSecret": "builtin-registry-auth",
        "pullSecretFile": "/config/pull-secret.json",
        "baseImageRepository": "registry.gitpods.writemy.codes/base-images",
        "workspaceImageRepository": "registry.gitpods.writemy.codes/workspace-images",
        "builderImage": "registry.writemy.codes/workspaces/gitpod-core-dev/build/image-builder-mk3/bob:df6f9b5ab510202c5719724d67c00bff8ee83000"
      },
      "refCache": {
        "interval": "6h0m0s",
        "refs": [
          "registry.writemy.codes/workspaces/gitpod-core-dev/build/gitpod/workspace-full:latest"
        ]
      },
      "service": {
        "address": ":8080",
        "tls": {
          "ca": "",
          "crt": "",
          "key": ""
        }
      },
      "prometheus": {
        "address": "127.0.0.1:9500",
        "tls": {
          "ca": "",
          "crt": "",
          "key": ""
        }
      },
      "pprof": {
        "address": ":6060"
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: image-builder-mk3
  name: image-builder-mk3-config
  namespace: core-prod
---
# v1/ConfigMap gitpod
apiVersion: v1
data:
  config.yaml: |
    apiVersion: v1
    authProviders:
    - kind: secret
      name: gitlab-auth
    blockNewUsers:
      enabled: false
      passlist: []
    certificate:
      kind: secret
      name: https-certificates
    containerRegistry:
      inCluster: true
      s3storage:
        bucket: gitpods-registry
        certificate:
          kind: secret
          name: gitpods-registry-s3
        endpoint: s3.mylogin.space
        region: us-east-1
    database:
      inCluster: true
    disableDefinitelyGp: true
    domain: gitpods.writemy.codes
    kind: Full
    metadata:
      region: us-east-1
      shortname: default
    objectStorage:
      inCluster: false
      resources:
        requests:
          memory: 2Gi
      s3:
        bucket: ""
        credentials:
          kind: secret
          name: storage-s3
        endpoint: s3.mylogin.space
    observability:
      logLevel: debug
      tracing:
        agentHost: k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev
        endpoint: http://k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev:14268/api/traces
    openVSX:
      url: https://open-vsx.gitpods.writemy.codes
    repository: registry.writemy.codes/workspaces/gitpod-core-dev/build
    workspace:
      maxLifetime: 36h0m0s
      pvc:
        size: 30Gi
        snapshotClass: ""
        storageClass: ""
      resources:
        requests:
          cpu: "1"
          memory: 2Gi
      runtime:
        containerdRuntimeDir: /var/lib/containerd/io.containerd.runtime.v2.task/k8s.io
        containerdSocket: /run/containerd/containerd.sock
        fsShiftMethod: fuse
  versions.json: |-
    {
      "versions": {
        "version": "release-2022.05.2.5",
        "components": {
          "agentSmith": {
            "version": "commit-922c9e8fceace4abc3ed37e92baaee6f10e6a4b7"
          },
          "blobserve": {
            "version": "commit-1c8e2ad0b16fbfef87968573eb853c322c8d2513"
          },
          "caUpdater": {
            "version": "commit-37164c872f55851dbd8126e1b5a8c062bc36fc1b"
          },
          "contentService": {
            "version": "commit-922c9e8fceace4abc3ed37e92baaee6f10e6a4b7"
          },
          "dashboard": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "dbMigrations": {
            "version": "commit-922c9e8fceace4abc3ed37e92baaee6f10e6a4b7"
          },
          "dbSync": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "ideProxy": {
            "version": "commit-490f4f1d7a3e31d8b21d42eb0691f847a5d258a6"
          },
          "imageBuilder": {
            "version": ""
          },
          "imageBuilderMk3": {
            "version": "commit-922c9e8fceace4abc3ed37e92baaee6f10e6a4b7",
            "builderImage": {
              "version": "df6f9b5ab510202c5719724d67c00bff8ee83000"
            }
          },
          "installationTelemetry": {
            "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
          },
          "integrationTests": {
            "version": ""
          },
          "openVSXProxy": {
            "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
          },
          "paymentEndpoint": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "proxy": {
            "version": "commit-490f4f1d7a3e31d8b21d42eb0691f847a5d258a6"
          },
          "public-api-server": {
            "version": "commit-1c8e2ad0b16fbfef87968573eb853c322c8d2513"
          },
          "registryFacade": {
            "version": "commit-1c8e2ad0b16fbfef87968573eb853c322c8d2513"
          },
          "server": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "serviceWaiter": {
            "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
          },
          "usage": {
            "version": "commit-922c9e8fceace4abc3ed37e92baaee6f10e6a4b7"
          },
          "workspace": {
            "codeImage": {
              "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
            },
            "dockerUp": {
              "version": "commit-59a5657dbd3a4157bb10eafcbfb3ab6b3bb1dbe9"
            },
            "supervisor": {
              "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
            },
            "workspacekit": {
              "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
            },
            "desktopIdeImages": {
              "codeDesktop": {
                "version": "commit-37164c872f55851dbd8126e1b5a8c062bc36fc1b"
              },
              "codeDesktopInsiders": {
                "version": "commit-37164c872f55851dbd8126e1b5a8c062bc36fc1b"
              },
              "intellij": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
              },
              "intellijLatest": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca-latest"
              },
              "goland": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
              },
              "golandLatest": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca-latest"
              },
              "pycharm": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
              },
              "pycharmLatest": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca-latest"
              },
              "phpstorm": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
              },
              "phpstormLatest": {
                "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca-latest"
              }
            }
          },
          "wsDaemon": {
            "version": "commit-8b296463e50b0ac971dae9bd3354e5111d6c1702",
            "userNamespaces": {
              "seccompProfileInstaller": {
                "version": "commit-df6f9b5ab510202c5719724d67c00bff8ee83000"
              },
              "shiftfsModuleLoader": {
                "version": "commit-37164c872f55851dbd8126e1b5a8c062bc36fc1b"
              }
            }
          },
          "wsManager": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "wsManagerBridge": {
            "version": "commit-bdf36db7723f2d5197fe6108bf3bd45609c5c3ca"
          },
          "wsProxy": {
            "version": "commit-8b296463e50b0ac971dae9bd3354e5111d6c1702"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod
  name: gitpod
  namespace: core-prod
---
# v1/ConfigMap ws-manager
apiVersion: v1
data:
  config.json: |-
    {
      "manager": {
        "namespace": "core-prod",
        "schedulerName": "",
        "seccompProfile": "localhost/workspace_default_release-2022.05.2.5.json",
        "timeouts": {
          "startup": "1h0m0s",
          "initialization": "30m0s",
          "regularWorkspace": "30m0s",
          "maxLifetime": "36h0m0s",
          "headlessWorkspace": "1h0m0s",
          "afterClose": "2m0s",
          "contentFinalization": "1h0m0s",
          "stopping": "1h0m0s",
          "interrupted": "5m0s"
        },
        "initProbe": {
          "timeout": "1s"
        },
        "urlTemplate": "https://{{ .Prefix }}.ws.gitpods.writemy.codes",
        "portUrlTemplate": "https://{{ .WorkspacePort }}-{{ .Prefix }}.ws.gitpods.writemy.codes",
        "workspaceHostPath": "/var/gitpod/workspaces",
        "heartbeatInterval": "30s",
        "hostURL": "https://gitpods.writemy.codes",
        "reconnectionInterval": "30s",
        "wsdaemon": {
          "port": 8080,
          "tls": {
            "ca": "/ws-daemon-tls-certs/ca.crt",
            "crt": "/ws-daemon-tls-certs/tls.crt",
            "key": "/ws-daemon-tls-certs/tls.key"
          }
        },
        "registryFacadeHost": "reg.gitpods.writemy.codes:20000",
        "workspaceClusterHost": "ws.gitpods.writemy.codes",
        "workspaceClass": {
          "default": {
            "container": {
              "requests": {
                "cpu": "1",
                "memory": "2Gi",
                "ephemeral-storage": ""
              },
              "limits": {
                "cpu": "",
                "memory": "",
                "ephemeral-storage": ""
              }
            },
            "templates": {},
            "pvc": {
              "size": "30Gi",
              "storageClass": "",
              "snapshotClass": ""
            }
          }
        }
      },
      "content": {
        "storage": {
          "stage": "",
          "kind": "minio",
          "gcloud": {
            "credentialsFile": "",
            "region": "",
            "projectId": "",
            "maximumBackupCount": 0
          },
          "minio": {
            "endpoint": "s3.mylogin.space",
            "accessKey": "",
            "accessKeyFile": "/mnt/secrets/storage/accessKeyId",
            "secretKey": "",
            "secretKeyFile": "/mnt/secrets/storage/secretAccessKey",
            "secure": true,
            "region": "us-east-1",
            "parallelUpload": 100
          },
          "backupTrail": {
            "enabled": true,
            "maxLength": 3
          },
          "blobQuota": 5368709120
        }
      },
      "rpcServer": {
        "addr": ":8080",
        "tls": {
          "ca": "/certs/ca.crt",
          "crt": "/certs/tls.crt",
          "key": "/certs/tls.key"
        },
        "ratelimits": {}
      },
      "imageBuilderProxy": {
        "targetAddr": "image-builder-mk3.core-prod.svc.k0s.resolvemy.host:8080"
      },
      "pprof": {
        "addr": "localhost:6060"
      },
      "prometheus": {
        "addr": "127.0.0.1:9500"
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ws-manager
  name: ws-manager
  namespace: core-prod
---
# v1/Service proxy
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"exposed_ports": {"80":{},"443": {}}}'
    external-dns.alpha.kubernetes.io/hostname: gitpods.writemy.codes,*.gitpods.writemy.codes,*.ws.gitpods.writemy.codes
  creationTimestamp: null
  labels:
    app: gitpod
    component: proxy
    kind: service
  name: proxy
  namespace: core-prod
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  - name: metrics
    port: 9500
    protocol: TCP
    targetPort: 9500
  selector:
    app: gitpod
    component: proxy
  type: LoadBalancer
status:
  loadBalancer: {}
`}}
