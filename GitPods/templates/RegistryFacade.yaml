# apps/v1/DaemonSet registry-facade
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: gitpod
    component: registry-facade
  name: registry-facade
  namespace: core-prod
spec:
  selector:
    matchLabels:
      app: gitpod
      component: registry-facade
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 5bbdf9a36ebe3fbbcb9c6dfd7bb17d037014f381068185bd31d5b02d5be1329e
      labels:
        app: gitpod
        component: registry-facade
      name: registry-facade
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_workspace_regular
                operator: Exists
            - matchExpressions:
              - key: gitpod.io/workload_workspace_headless
                operator: Exists
      containers:
        - name: registry-facade

          image: registry.writemy.codes/workspaces/gitpod-core-dev/build/registry-facade:commit-1c8e2ad0b16fbfef87968573eb853c322c8d2513
          imagePullPolicy: IfNotPresent

          args:
            - run
            - /mnt/config/config.json

          env:
            - name: GITPOD_DOMAIN
              value: gitpods.writemy.codes

            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default

            - name: GITPOD_REGION
              value: us-east-1

            - name: HOST_URL
              value: https://gitpods.writemy.codes

            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace

            - name: KUBE_DOMAIN
              value: svc.k0s.resolvemy.host

            - name: LOG_LEVEL
              value: debug

            - name: JAEGER_ENDPOINT
              value: http://k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev:14268/api/traces

            - name: JAEGER_SAMPLER_TYPE
              value: const

            - name: JAEGER_SAMPLER_PARAM
              value: "1"

            - name: GRPC_GO_RETRY
              value: "on"

            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - wait4x http http://localhost:8086/ready -t30s --expect-status-code
                    200 && kubectl label --overwrite nodes ${NODENAME} gitpod.io/registry-facade_ready_ns_${KUBE_NAMESPACE}=true
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - kubectl label nodes ${NODENAME} gitpod.io/registry-facade_ready_ns_${KUBE_NAMESPACE}-
          
          ports:
            - containerPort: 20000
              name: registry

          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: false
            runAsUser: 1000
          volumeMounts:
            - mountPath: /mnt/cache
              name: cache

            - mountPath: /mnt/config
              name: config
              readOnly: true

            - mountPath: /ws-manager-client-tls-certs
              name: ws-manager-client-tls-certs
              readOnly: true

            - mountPath: /mnt/pull-secret.json
              name: pull-secret
              subPath: .dockerconfigjson

            - mountPath: /mnt/certificates
              name: config-certificates

        - name: kube-rbac-proxy
        
          image: quay.io/brancz/kube-rbac-proxy:v0.12.0

          args:
            - --v=5
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

          ports:
            - containerPort: 9500
              name: metrics

          resources:
            requests:
              cpu: 1m
              memory: 30Mi

          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532

          terminationMessagePolicy: FallbackToLogsOnError

      dnsPolicy: ClusterFirst
      dnsConfig:
        nameservers:
          - 10.0.8.10
          - 172.18.0.10
      enableServiceLinks: false
      initContainers:
        - name: update-ca-certificates
        
          image: registry.writemy.codes/workspaces/gitpod-core-dev/build/ca-updater:commit-37164c872f55851dbd8126e1b5a8c062bc36fc1b
          imagePullPolicy: IfNotPresent

          command:
            - bash
            - -c
            - set -e; update-ca-certificates -f; cp /etc/ssl/certs/* /ssl-certs; echo
              'OK'
          
          resources: {}

          volumeMounts:
            - mountPath: /ssl-certs
              name: cacerts
            - mountPath: /usr/local/share/ca-certificates/gitpod-ca.crt
              name: gitpod-ca-certificate
              subPath: ca.crt
      
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccountName: registry-facade
      terminationGracePeriodSeconds: 30
      volumes:
      
        - emptyDir: {}
          name: cache
        
        - configMap:
            name: registry-facade
          name: config
        
        - name: ws-manager-client-tls-certs
          secret:
            secretName: ws-manager-client-tls
        
        - name: pull-secret
          secret:
            secretName: builtin-registry-auth
        
        - hostPath:
            path: /
          name: hostfs
        
        - emptyDir: {}
          name: gitpod-ca-certificate
        
        - emptyDir: {}
          name: cacerts
        
        - name: config-certificates
          secret:
            secretName: https-certificates
  
  updateStrategy: {}
