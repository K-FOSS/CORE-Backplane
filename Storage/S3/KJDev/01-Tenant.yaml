apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  name: kjdev-core
  namespace: core-prod

  labels:
    sidecar.istio.io/inject: 'true'

  annotations:
    sidecar.istio.io/inject: 'true'
    traffic.sidecar.istio.io/excludeOutboundIPRanges: '0.0.0.0/0'
scheduler:
  name: ""
spec:
  configuration:
    name: kjdev-core-env-configuration

  credsSecret:
    name: kjdev-core-secret

  imagePullSecret: {}

  log:
    audit:
      diskCapacityGB: 120
    db:
      resources: {}
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
      volumeClaimTemplate:
        metadata:
          name: kjdev-core-log
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: '50G'

        status: {}
    resources: {}
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

  mountPath: /export

  pools:
    - name: pool-0

      resources:
        requests:
          cpu: 64m
          memory: 512Mi

      servers: 4

      volumeClaimTemplate:
        metadata:
          name: data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: '322122547200'
          storageClassName: infra1-storage
        status: {}
      volumesPerServer: 1

  priorityClassName: tier2-priority

  prometheusOperator: true
  # prometheus:
  #   diskCapacityGB: 20
  #   resources: {}
  #   securityContext:
  #     fsGroup: 1000
  #     runAsGroup: 1000
  #     runAsNonRoot: true
  #     runAsUser: 1000

  requestAutoCert: true
