{{- $fullName := include "spilo.fullname" . -}}
{{- $clusterName := include "spilo.clusterName" . -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-db

  labels:
    app: {{ $fullName }}-db
    spilo-cluster: {{ $clusterName }}
    spilo-scope: core

  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  selector:
    matchLabels:
      app: {{ $fullName }}-db

  replicas: 3

  serviceName: {{ $fullName }}-db

  podManagementPolicy: OrderedReady

  minReadySeconds: 60

  template:
    metadata:
      labels:
        app: {{ $fullName }}-db
        spilo-cluster: {{ $clusterName }}

    spec:
      serviceAccountName: {{ $fullName }}-db
      priorityClassName: system-node-critical

      containers:
        - name: spilo

          {{- with .Values.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          {{- with .Values.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}

          ports:
            - containerPort: 8008
              protocol: TCP

            - name: psql
              containerPort: 5432
              protocol: TCP

          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /readiness
              port: 8008
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /liveness
              port: 8008
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: pgdata

          env:
          - name: DCS_ENABLE_KUBERNETES_API
            value: ''

          - name: KUBERNETES_SCOPE_LABEL
            value: spilo-scope

          - name: KUBERNETES_ROLE_LABEL
            value: role

          - name: SCOPE
            value: 'core'

          - name: ALLOW_NOSSL
            value: 'true'

          - name: PATRONI_CONSUL_HOST
            value: consul.service.dc1.kjdev

          - name: PATRONI_CONSUL_PORT
            value: '8500'

          - name: PATRONI_CONSUL_URL
            value: http://consul.service.dc1.kjdev:8500

          - name: PATRONI_CONSUL_REGISTER_SERVICE
            value: 'true'

          #
          # Backups
          #
          # - name: WAL_S3_BUCKET
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3Bucket
          #       name: psql-backup-creds

          # - name: AWS_REGION
          #   value: us-east-1


          # - name: WALE_S3_PREFIX
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3Prefix
          #       name: psql-backup-creds

          # - name: USE_WALG_BACKUP
          #   value: 'true'

          # - name: USE_WALG_RESTORE
          #   value: 'true'

          # - name: AWS_S3_FORCE_PATH_STYLE
          #   value: 'true'

          # - name: AWS_REGION
          #   value: us-east-1



          # - name: AWS_ACCESS_KEY_ID
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3AccessKey
          #       name: psql-backup-creds

          # - name: AWS_SECRET_ACCESS_KEY
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3SecretKey
          #       name: psql-backup-creds
          # - name: AWS_ENDPOINT
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3Endpoint
          #       name: psql-backup-creds
          # - name: WALG_S3_PREFIX
          #   valueFrom:
          #     secretKeyRef:
          #       key: S3Prefix
          #       name: psql-backup-creds

          - name: PGUSER_SUPERUSER
            valueFrom:
              secretKeyRef:
                key: Username
                name: psql-backup-creds

          - name: PGPASSWORD_SUPERUSER
            valueFrom:
              secretKeyRef:
                key: Password
                name: psql-backup-creds

          - name: PGPASSWORD_ADMIN
            valueFrom:
              secretKeyRef:
                key: Password
                name: psql-backup-creds

          - name: PGPASSWORD_STANDBY
            valueFrom:
              secretKeyRef:
                key: Password
                name: psql-backup-creds

          - name: PGUSER_ADMIN
            value: superadmin

          - name: SPILO_CONFIGURATION
            value: | ## https://github.com/zalando/patroni#yaml-configuration
              consul:
                host: consul.service.dc1.kjdev
                url: http://consul.service.dc1.kjdev:8500

                port: 8500
                scheme: http
                register_service: true

              postgresql:
                parameters:
                  max_connections: 512

                pg_hba:
                  - local all all  trust
                  - local replication standby  md5
                  - host all all 0.0.0.0/0 md5
                  - host replication replicator 0.0.0.0/0 md5
                  - host replication standby 0.0.0.0/0 md5

              log:
                level: DEBUG  
              
              bootstrap:
                initdb:
                  - encoding: UTF8
                  - auth-host: md5
                  - auth-local: trust

          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP

          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace

          - name: PGROOT
            value: /home/postgres/pgdata/pgroot

      terminationGracePeriodSeconds: 0

  volumeClaimTemplates:
    - metadata:
        labels:
          application: spilo
          spilo-cluster: {{ $clusterName }}
        name: pgdata

      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
