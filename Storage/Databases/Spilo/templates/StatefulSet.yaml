{{- $fullName := include "spilo.fullname" . -}}
{{- $clusterName := include "spilo.clusterName" . -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-db

  labels:
    app: {{ $fullName }}-db
    spilo-cluster: {{ $clusterName }}

spec:
  selector:
    matchLabels:
      app: {{ $fullName }}-db

  replicas: 1

  serviceName: {{ $fullName }}-db

  template:
    metadata:
      labels:
        app: {{ $fullName }}-db
        spilo-cluster: {{ $clusterName }}

    spec:
      containers:
        - name: spilo

          {{- with .Values.image }}
          image: '{{ .repository }}{{ if .digest }}@{{ .digest }}{{ else }}:{{ .tag }}{{ end }}'
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}

          {{- with .Values.image.pullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 10 }}
          {{- end }}

          ports:
            - containerPort: 8008
              protocol: TCP

            - name: psql
              containerPort: 5432
              protocol: TCP

          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: pgdata

          env:
          - name: DCS_ENABLE_KUBERNETES_API
            value: ''

          - name: PATRONI_CONSUL_HOST
            value: consul.service.dc1.kjdev

          - name: PATRONI_CONSUL_PORT
            value: '8500'

          - name: PATRONI_CONSUL_URL
            value: http://consul.service.dc1.kjdev:8500

          - name: PATRONI_CONSUL_REGISTER_SERVICE
            value: 'true'

          #
          # Backups
          #
          - name: WAL_S3_BUCKET
            valueFrom:
              secretKeyRef:
                key: S3Bucket
                name: psql-backup-creds

          - name: AWS_REGION
            value: us-east-1


          - name: WALE_S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: S3Endpoint
                name: psql-backup-creds

          - name: WALE_S3_PREFIX
            valueFrom:
              secretKeyRef:
                key: S3Prefix
                name: psql-backup-creds

          - name: USE_WALG_BACKUP
            value: 'true'

          - name: USE_WALG_RESTORE
            value: 'true'

          - name: AWS_S3_FORCE_PATH_STYLE
            value: 'true'

          - name: AWS_REGION
            value: us-east-1



          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: S3AccessKey
                name: psql-backup-creds

          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: S3SecretKey
                name: psql-backup-creds
          - name: AWS_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: S3Endpoint
                name: psql-backup-creds
          - name: WALG_S3_PREFIX
            valueFrom:
              secretKeyRef:
                key: S3Prefix
                name: psql-backup-creds

          - name: PATRONI_SUPERUSER_USERNAME
            valueFrom:
              secretKeyRef:
                key: Username
                name: psql-backup-creds

          - name: PATRONI_SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: Password
                name: psql-backup-creds


          - name: SPILO_CONFIGURATION
            value: | ## https://github.com/zalando/patroni#yaml-configuration
              consul:
                host: consul.service.dc1.kjdev
                url: http://consul.service.dc1.kjdev:8500

                port: 8500
                scheme: http
                register_service: true
              
              bootstrap:
                dcs:
                  ttl: 30
                  loop_wait: 10
                  retry_timeout: 10
                  maximum_lag_on_failover: 1048576
                  postgresql:
                    use_pg_rewind: true

                method: clone_with_walg
                clone_with_walg:
                  command: /scripts/clone_with_walg.sh
                  recovery_conf:
                    recovery_target_timeline: latest
                    recovery_target_action: promote
                    recovery_target_time: ''

                initdb:
                  - encoding: UTF8
                  - data-checksums

                pg_hba:
                  - host replication replicator 127.0.0.1/32 md5
                  - host replication replicator 10.0.1.4/0 md5
                  - host replication replicator 10.0.1.8/0 md5
                  - host replication replicator 10.0.1.6/0 md5
                  - host all all 0.0.0.0/0 md5

          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP

          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace

          - name: PGROOT
            value: /home/postgres/pgdata/pgroot

      terminationGracePeriodSeconds: 0

  volumeClaimTemplates:
    - metadata:
        labels:
          application: spilo
          spilo-cluster: {{ $clusterName }}
        name: pgdata

      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
