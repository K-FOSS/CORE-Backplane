openunison-operator:
  # If set to true the CRDs will be deployed.  Otherwise the CRs are ignored.
  crd:
    deploy: true
    betas: false
    webhooks: true

  services:
    node_selectors: []
    pullSecret: ""

  image: docker.io/tremolosecurity/openunison-k8s-operator:latest
    

orchestra:
  enabled: true
  network:
    openunison_host: "sso.mylogin.space"
    dashboard_host: "k8s-dash.mylogin.space"
    api_server_host: "k8s.mylogin.space"
    session_inactivity_timeout_seconds: 900

    k8s_url: https://10.1.1.44:6443
    force_redirect_to_tls: true
    createIngressCertificate: false
    ingress_type: istio
    ingress_certificate: myloginspace-default-certificates
    ingress_annotations: {}
    istio:
      selectors:
        istio: ingressgateway
    traefik:
      secure: true
      entrypoints:
        plaintext: web
        tls: websecure


  oidc:
    client_id: fa670bdfdd92c5b4f174512440a1d0b72c8ff78b
    auth_url: https://idp.mylogin.space/application/o/authorize/
    token_url: https://idp.mylogin.space/application/o/token/
    user_in_idtoken: false
    userinfo_url: https://idp.mylogin.space/application/o/userinfo/
    domain: ""
    scopes: openid email profile groups
    claims:
      sub: sub
      email: email
      given_name: given_name
      family_name: family_name
      display_name: name
      groups: groups

  cert_template:
    ou: "Kubernetes"
    o: "MyOrg"
    l: "My Cluster"
    st: "State of Cluster"
    c: "MyCountry"

  image: "docker.io/tremolosecurity/openunison-k8s:latest"
  amq_image: "docker.io/tremolosecurity/activemq-docker:latest"
  myvd_config_path: "WEB-INF/myvd.conf"
  k8s_cluster_name: cntrlplane
  enable_impersonation: true
  myvd_configmap: myvd

  dashboard:
    namespace: "core-prod"
    cert_name: "kubernetes-dashboard-certs"
    label: "k8s-app=kubernetes-dashboard"
    service_name: kubernetes-dashboard

  certs:
    use_k8s_cm: true

  trusted_certs: []



  #active_directory:
  #  base: cn=users,dc=ent2k12,dc=domain,dc=com
  #  host: "192.168.2.75"
  #  port: "636"
  #  bind_dn: "cn=Administrator,cn=users,dc=ent2k12,dc=domain,dc=com"
  #  con_type: ldaps
  #  srv_dns: "false"

  database:
    hibernate_dialect: org.hibernate.dialect.PostgreSQLDialect
    quartz_dialect: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
    driver: com.mysql.jdbc.Driver
    url: jdbc:postgresql://psql.service.dc1.kjdev:5432/
    user: <secret:CORE0_SITE1/data/ArtifactHub~DatabaseDatabase>
    validation: SELECT 1

  smtp:
    host: smtp.gmail.com
    port: 587
    user: donotreply@domain.com
    from: donotreply@domain.com
    tls: true

  monitoring:
    prometheus_service_account: system:serviceaccount:monitoring:prometheus-k8s

  impersonation:
    use_jetstack: false
    jetstack_oidc_proxy_image: docker.io/tremolosecurity/kube-oidc-proxy:latest
    explicit_certificate_trust: false
    ca_secret_name: ou-tls-certificate

  network_policies:
    enabled: true
    ingress:
      enabled: true
      labels:
        app.kubernetes.io/name: ingress-nginx
    monitoring:
      enabled: true
      labels:
        app.kubernetes.io/name: monitoring
    apiserver:
      enabled: true
      labels:
        app.kubernetes.io/name: kube-system

  services:
    enable_tokenrequest: false
    token_request_audience: api
    token_request_expiration_seconds: 600
    node_selectors: []
    pullSecret: ""
    liveness_probe:
    - /usr/local/openunison/bin/check_alive.sh
    - "https://127.0.0.1:8443/auth/idp/k8sIdp/.well-known/openid-configuration"
    - "issuer"
    - "https://127.0.0.1:8443/check_alive"
    - "alive"
    readiness_probe:
    - /usr/local/openunison/bin/check_alive.sh
    - "https://127.0.0.1:8443/auth/idp/k8sIdp/.well-known/openid-configuration"
    - "issuer"
    - "https://127.0.0.1:8443/check_alive"
    - "alive"
  
  openunison:
    replicas: 1
    non_secret_data: {}
    secrets: []
    html:
      image: docker.lab.tremolo.dev/nginx
    enable_provisioning: false
    enable_activemq: false
    precheck:
      image: docker.io/tremolosecurity/python3
    management_proxy:
      enabled: false
    queue:
      max_producers: 2
      connection_factory: com.tremolosecurity.provisioning.amq.AmqSingleKeyProvider
      max_consumers: 1
      max_sessions_per_connection: 10
      task_queue_name: "openunisuron-tasks-{x}"
      smtp_queue_name: "openunison-smtp"
      encryption_key_name: "session-unison"
      num_queues: 6
      multi_task_queues: true
      keep_alive_millis: 60000
      params:
        - name: brokerURL
          source_type: static
          value: "failover:(ssl://amq.openunison.svc:61616)?initialReconnectDelay=10000"
        - name: keyAlias
          source_type: static
          value: "amq-client"
        - name: trustAlias
          source_type: static
          value: "amq-server"
    
    naas:
      forms:
        new_namespace:
          use_default: true
      workflows:
        new_namespace:
          use_default: true
      groups:
        default:
        - name: administrators
          bindings:
            - type: ClusterRole
              binding: admins
              name: admin
          description: Manage kubernetes namespace $cluster$ $nameSpace$
          workflow:
            label: "namespace administrator"
            displayLabel: $name$ Administrator
            emailTemplate: Approve administrator access to $cluster$ $name$
            approvalLabel: Approve administrator access for $cluster$ - $name$
            userNotification:
              subject: Admin access to $cluster$ $name$ approved
              message: Your access has been approved
            org:
              label: Administrators
              description: Namespace Administrators
          external:
            fieldName: adminGroup
            label: "Administrator Group"
            errorMessage: "Invalid administrator group"
        - name: viewer
          description: View kubernetes namespace $cluster$ $nameSpace$
          bindings:
            - type: ClusterRole
              binding: viewers
              name: view
          external:
            fieldName: viewerGroup
            label: "Viewer Group"
            errorMessage: "Invalid viewer group"
          workflow:
            label: "namespace viewer"
            displayLabel: $name$ Administrator
            emailTemplate: Approve viewer access to $cluster$ $name$
            approvalLabel: Approve viewer access for $cluster$ - $name$
            userNotification:
              subject: View access to $cluster$ $name$ approved
              message: Your access has been approved
            org:
              label: Viewers
              description: Namespace Viewers
        internal:
          enabled: true
          suffix: "-internal"
        external:
          suffix: "-external"
          enabled: false
          admin_group: "CN=openunison-admins,CN=Users,DC=ent2k12,DC=domain,DC=com"
          cluster_admin_group: "CN=k8s_login_ckuster_admins,CN=Users,DC=ent2k12,DC=domain,DC=com"
