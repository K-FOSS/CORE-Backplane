apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-network-infra-istio-gateway-helm
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://10.1.1.40:443
  template:
    metadata:
      name: '{{cluster}}-istio-gateway-helm'
    spec:
      project: core
      syncPolicy:
        automated:
          selfHeal: true
      source:
        repoURL: https://istio-release.storage.googleapis.com/charts
        chart: gateway
        path: gateway
        targetRevision: 1.13.2
        helm:
          releaseName: istio-ingress
          values: |
            # Name allows overriding the release name. Generally this should not be set
            name: ""
            # revision declares which revision this gateway is a part of
            revision: ""

            replicaCount: 2

            rbac:
              # If enabled, roles will be created to enable accessing certificates from Gateways. This is not needed
              # when using http://gateway-api.org/.
              enabled: true

            serviceAccount:
              # If set, a service account will be created. Otherwise, the default is used
              create: true
              # Annotations to add to the service account
              annotations: {}
              # The name of the service account to use.
              # If not set, the release name is used
              name: ""

            # Define the security context for the pod.
            # If unset, this will be automatically set to the minimum privileges required to bind to port 80 and 443.
            # On Kubernetes 1.22+, this only requires the `net.ipv4.ip_unprivileged_port_start` sysctl.
            securityContext: ~
            containerSecurityContext: ~

            service:
              # Type of service. Set to "None" to disable the service entirely
              type: LoadBalancer
              annotations:
                metallb.universe.tf/allow-shared-ip: istio
              ports:
              - name: status-port
                port: 15021
                protocol: TCP
                targetPort: 15021

              - name: minecraft
                port: 25565
                protocol: TCP
                targetPort: 25565

              - name: http2
                port: 80
                protocol: TCP
                targetPort: 80

              - name: mysql
                port: 3306
                protocol: TCP
                appProtocol: mysql
                targetPort: 3306

              

              - name: http-alt
                port: 8080
                protocol: TCP
                appProtocol: http
                targetPort: 8080

              - name: dns-tls
                port: 853
                protocol: TCP
                targetPort: 853

              - name: dns-tcp
                port: 53
                protocol: TCP
                targetPort: 53

              - name: tls-turn
                port: 3478
                protocol: TCP
                targetPort: 3478

              - name: https-tcp
                port: 443
                protocol: TCP
                targetPort: 443
              loadBalancerIP: 10.1.1.83
              loadBalancerSourceRanges: []

            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 2000m
                memory: 1024Mi

            autoscaling:
              enabled: false
              minReplicas: 1
              maxReplicas: 5
              targetCPUUtilizationPercentage: 80

            # Pod environment variables
            env: {}

            # Labels to apply to all resources
            labels:
              logs: loki-myloginspace

            # Annotations to apply to all resources
            annotations: {}

            nodeSelector: {}

            tolerations: []

            affinity: {}

            imagePullSecrets: []

      destination:
        server: '{{url}}'
        namespace: core-prod
