apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tier: control-plane
    component: kube-controller-manager
  name: kube-controller-manager
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      tier: control-plane
      component: kube-controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: control-plane
        component: kube-controller-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: kube-controller-manager
                topologyKey: kubernetes.io/hostname
              weight: 1
      automountServiceAccountToken: false
      containers:
        - command:
            - kube-controller-manager
            - >-
              --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
            - '--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf'
            - '--bind-address=0.0.0.0'
            - '--client-ca-file=/pki/ca/tls.crt'
            - '--cluster-name=kubernetes'
            - '--cluster-signing-cert-file=/pki/ca/tls.crt'
            - '--cluster-signing-key-file=/pki/ca/tls.key'
            - '--controllers=*,bootstrapsigner,tokencleaner'
            - '--kubeconfig=/etc/kubernetes/controller-manager.conf'
            - '--leader-elect=true'
            - '--requestheader-client-ca-file=/pki/front-proxy-client/tls.crt'
            - '--root-ca-file=/pki/ca/tls.crt'
            - '--secure-port=10257'
            - '--service-account-private-key-file=/pki/sa/tls.key'
            - '--use-service-account-credentials=true'
            - '--tls-cert-file=/pki/controller-manager-server/tls.crt'
            - '--tls-private-key-file=/pki/controller-manager-server/tls.key'
            - '--service-cluster-ip-range=10.0.8.0/22'
            - '--allocate-node-cidrs=true'
            - '--cluster-cidr=10.4.0.0/16'
          image: 'k8s.gcr.io/kube-controller-manager:v1.23.6'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 10257
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: kube-controller-manager
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30

