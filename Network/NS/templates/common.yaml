---
{{- include "bjw-s.common.loader.init" . }}

{{- define "app-template.hardcodedValues" -}}
# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"
{{ end }}

persistence:
  config:
    enabled: true
    mountPath: /etc/pdns/pdns.conf
    subPath: pnds.conf
    type: custom
    volumeSpec:
      configMap:
        name: '{{ include "bjw-s.common.lib.chart.names.fullname" . }}-config'

    advancedMounts:
      main: # the controller with the "main" identifier
        main: # the container with the "main" identifier
          - path: /etc/pdns/pdns.conf
            readOnly: true
            subPath: pnds.conf


  configs:
    enabled: true
    mountPath: /etc/pdns/conf.d
    type: custom
    volumeSpec:
      secret:
        secretName: '{{ include "bjw-s.common.lib.chart.names.fullname" . }}-secrets'

    advancedMounts:
      main: # the controller with the "main" identifier
        main: # the container with the "main" identifier
          - path: /etc/pdns/conf.d

  database:
    enabled: true
    mountPath: /etc/pdns/conf.d/database.conf
    subPath: database.conf
    type: custom
    volumeSpec:
      secret:
        secretName: '{{ include "bjw-s.common.lib.chart.names.fullname" . }}-database'

    advancedMounts:
      main: # the controller with the "main" identifier
        main: # the container with the "main" identifier
          - path: /etc/pdns/conf.d/database.conf
            readOnly: true
            subPath: database.conf

{{- end -}}
{{- $_ := mergeOverwrite .Values (include "app-template.hardcodedValues" . | fromYaml) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}