apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-ns-admin
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
  template:
    metadata:
      name: '{{cluster}}-ns-admin'
    spec:
      project: core
      syncPolicy:
        automated:
          selfHeal: true
      source:
        repoURL: https://k8s-at-home.com/charts/
        chart: powerdns-admin
        path: powerdns-admin
        targetRevision: 1.0.0
        helm:
          releaseName: ns-admin
          values: |
            persistence:
              data:
                enabled: false

            envFrom:
              - secretRef:
                name: pdns-admin-secrets

            env:
              GUNICORN_LOGLEVEL: WARN
              GUNICORN_TIMEOUT: 60
              GUNICORN_WORKERS: 2
              TZ: UTC
              OFFLINE_MODE: 'False'
              PDNS_HOST: pdns-admin-powerdns-admin-networking-prod.service.dc1.kjdev
              PDNS_PORT: 80
              PDNS_PROTO: http

            ingress:
              main:
                enabled: true
                annotations:
                  external-dns.alpha.kubernetes.io/target: k0s-dc1.resolvemy.host.
                  ingress.pomerium.io/allowed_idp_claims: '{"groups": ["Server", "Network"]}'
                  ingress.pomerium.io/pass_identity_headers: 'true'
                  ingress.pomerium.io/preserve_host_header: 'true'
                  traefik.ingress.kubernetes.io/router.entrypoints: websecure
                  traefik.ingress.kubernetes.io/router.middlewares: core-prod-pomerium-auth@kubernetescrd
                  traefik.ingress.kubernetes.io/router.tls: 'true'
                hosts:
                  - host: ns.int.mylogin.space
                    paths:
                      - path: /
                        pathType: Prefix
                        service:
                          port: 80
                ingressClassName: traefik-core
                labels:
                  lan-mode: private
                  wan-mode: public
                tls:
                  - hosts:
                      - '*.int.mylogin.space'
                    secretName: myloginspace-int-default-certificates

            service:
              main:
                ports:
                  http:
                    port: 80


      destination:
        server: '{{url}}'
        namespace: core-prod
