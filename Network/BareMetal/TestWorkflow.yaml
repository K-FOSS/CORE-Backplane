apiVersion: "tinkerbell.org/v1alpha1"
kind: Workflow
metadata:
  name: wf
spec:
  templateRef: helloworld
  hardwareMap:
    machine1: 00:50:56:81:2a:94
    config: 'cGFzc3dkOgogIHVzZXJzOgogICAgLSBuYW1lOiBram9uZXMKICAgICAgc3NoX2F1dGhvcml6ZWRfa2V5czoKICAgICAgICAtICdzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURmQmdiZ2hDNkRTMWVROWlKWTRFdktpQXRzbHZFa293UFY0UmRxT1BYTXBsZ2dVNzBIdWljVE13ZUNTOUVzVTZkTCtEVnE2TUZVam95QW5CTG41VERmL245TUQzSFZNZGVsVjVPSDJmV2huOTNFam1WalRCUC9oRWdxaEYrTGl3Z3lNRjBSRXNYbXBVbU83YzZ5OVdRa3FBY3JnVEUvZG4zQVQ1RjdlZ0ZzcDY4L0FycGxITVQzek1VTGxPNU10cnJ6Wk8xTlE3SWJqYi9lNUNuKyswWDZDRWdBTjYyaEgyRzZTbHcxNnNiWlRUWDZ2T2RmREZQWDhyMll5Y2RWUTAraUliMnRjVmxjZGxCenJ4c3cvUmkvUHExZldGcFZCbEFncmpYTmhJOUlVWWtXMksvVjV2a1pPcExVUkFwNEhEREtvTHVUMHJYZFhPaXM4RVp5VUc5akwyMDJqbTFEZTVFaHNCZ3paaVpmL2xnUTBSRHJReTlWelJIMTZpYWFabzlEbGwzTzhiUzMwM0ZiRTZwSUdjWXJVdTZ0YnJDaWdqUGtiRC84RHpmc3VWeVNXbUxVUk9IaDQ4SHRBNHYzRXltZ24xOHBVRnVaTFBPWnlFTWZmSjd4WFVJSlo1TFRBaVozVGk1bGZ0Y3dFZGlzSmJBdnRSTm5kS09Pa2ZJU3Nzcz0ga3Jpc3RpYW5mam9uZXNAS0pEZXYtTGFwdG9wMScKCiAgICAtIG5hbWU6IHJvb3QKICAgICAgc3NoX2F1dGhvcml6ZWRfa2V5czoKICAgICAgICAtICdzc2gtcnNhIEFBQUFCM056YUMxeWMyRUFBQUFEQVFBQkFBQUJnUURmQmdiZ2hDNkRTMWVROWlKWTRFdktpQXRzbHZFa293UFY0UmRxT1BYTXBsZ2dVNzBIdWljVE13ZUNTOUVzVTZkTCtEVnE2TUZVam95QW5CTG41VERmL245TUQzSFZNZGVsVjVPSDJmV2huOTNFam1WalRCUC9oRWdxaEYrTGl3Z3lNRjBSRXNYbXBVbU83YzZ5OVdRa3FBY3JnVEUvZG4zQVQ1RjdlZ0ZzcDY4L0FycGxITVQzek1VTGxPNU10cnJ6Wk8xTlE3SWJqYi9lNUNuKyswWDZDRWdBTjYyaEgyRzZTbHcxNnNiWlRUWDZ2T2RmREZQWDhyMll5Y2RWUTAraUliMnRjVmxjZGxCenJ4c3cvUmkvUHExZldGcFZCbEFncmpYTmhJOUlVWWtXMksvVjV2a1pPcExVUkFwNEhEREtvTHVUMHJYZFhPaXM4RVp5VUc5akwyMDJqbTFEZTVFaHNCZ3paaVpmL2xnUTBSRHJReTlWelJIMTZpYWFabzlEbGwzTzhiUzMwM0ZiRTZwSUdjWXJVdTZ0YnJDaWdqUGtiRC84RHpmc3VWeVNXbUxVUk9IaDQ4SHRBNHYzRXltZ24xOHBVRnVaTFBPWnlFTWZmSjd4WFVJSlo1TFRBaVozVGk1bGZ0Y3dFZGlzSmJBdnRSTm5kS09Pa2ZJU3Nzcz0ga3Jpc3RpYW5mam9uZXNAS0pEZXYtTGFwdG9wMScKCnN5c3RlbWQ6CiAgdW5pdHM6CiAgICAjCiAgICAjIENvbnRhaW5lciBSdW50aW1lIChIb3BlZnVsbHkgdGhleSdsbCByZW1vdmUgZG9ja2VyIHN0YXJ0aW5nIGJ5IGRlZmF1bHQpCiAgICAjIFRPRE86IERldGVybWluZSBpZiB0aGlzIGNhbiBiZSByZWZhY3RvcmVkIGludG8gYSBzeXNleHQKICAgICMKICAgIC0gbmFtZTogZG9ja2VyLnNlcnZpY2UKICAgICAgZW5hYmxlZDogZmFsc2UKICAKICAgIC0gbmFtZTogZG9ja2VyLnNvY2tldAogICAgICBlbmFibGVkOiBmYWxzZQoKICAgIC0gbmFtZTogY29udGFpbmVyZC5zZXJ2aWNlCiAgICAgIGVuYWJsZWQ6IHRydWUKCiAgICAjCiAgICAjIE5ldHdvcmtpbmcgLSBNaXNjCiAgICAjCiAgICAtIG5hbWU6IHN5c3RlbWQtcmVzb2x2ZWQuc2VydmljZQogICAgICBlbmFibGVkOiBmYWxzZQoKICAgIAogICAgIwogICAgIyBTdG9yYWdlCiAgICAjCiAgICAtIG5hbWU6IGlzY3NpZC5zZXJ2aWNlCiAgICAgIGVuYWJsZTogdHJ1ZQoKICAgIC0gbmFtZTogbXVsdGlwYXRoZC5zZXJ2aWNlCiAgICAgIGVuYWJsZTogdHJ1ZQoKICAgICMKICAgICMgS3ViZXJuZXRlcwogICAgIwoKICAgICMKICAgICMgUHJlcGFyYXRpb24KICAgICMKICAgICMgU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vZmxhdGNhci1saW51eC9tYW50bGUvYmxvYi9mbGF0Y2FyLW1hc3Rlci9rb2xhL3Rlc3RzL2t1YmVhZG0vdGVtcGxhdGVzLmdvCiAgICAjIFRPRE86IE1vdmUgdGhpcyB0byBoZWxtL3NjcmlwdHMvSzhzIENST04vQXJnby1Xb3JrZmxvd3MvQmFja3N0YWdlL09BTS9Dcm9zc3BsYW5lCiAgICAjIAogICAgLSBuYW1lOiBwcmVwYXJlLWNuaS1wbHVnaW5zLnNlcnZpY2UKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICBjb250ZW50czogfAogICAgICAgIFtVbml0XQogICAgICAgIERlc2NyaXB0aW9uPVVucGFjayBDTkkgcGx1Z2lucyB0byAvb3B0L2NuaS9iaW4KICAgICAgICBDb25kaXRpb25QYXRoRXhpc3RzPSEvb3B0L2NuaS9iaW4KCiAgICAgICAgW1NlcnZpY2VdCiAgICAgICAgVHlwZT1vbmVzaG90CiAgICAgICAgUmVtYWluQWZ0ZXJFeGl0PXRydWUKICAgICAgICBSZXN0YXJ0PW9uLWZhaWx1cmUKICAgICAgICBFbnZpcm9ubWVudD1DTklfVkVSU0lPTj12MS4xLjEKICAgICAgICBFeGVjU3RhcnRQcmU9L3Vzci9iaW4vbWtkaXIgLS1wYXJlbnRzIC9vcHQvY25pL2JpbgogICAgICAgIEV4ZWNTdGFydFByZT0vdXNyL2Jpbi90YXIgLXYgLS1leHRyYWN0IC0tZmlsZSAiL29wdC9jbmktcGx1Z2lucy1saW51eC1hbWQ2NC0ke0NOSV9WRVJTSU9OfS50Z3oiIC0tZGlyZWN0b3J5IC9vcHQvY25pL2JpbiAtLW5vLXNhbWUtb3duZXIKICAgICAgICBFeGVjU3RhcnRQcmU9L3Vzci9iaW4vY2hjb24gLVIgL29wdC9jbmkgLXQgc3ZpcnRfbHhjX2ZpbGVfdAogICAgICAgIEV4ZWNTdGFydD0vdXNyL2Jpbi9ybSAiL29wdC9jbmktcGx1Z2lucy1saW51eC1hbWQ2NC0ke0NOSV9WRVJTSU9OfS50Z3oiCgogICAgICAgIFtJbnN0YWxsXQogICAgICAgIFdhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CgogICAgLSBuYW1lOiBwcmVwYXJlLWNyaXRvb2xzLnNlcnZpY2UKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICBjb250ZW50czogfAogICAgICAgIFtVbml0XQogICAgICAgIERlc2NyaXB0aW9uPVVucGFjayBDUkkgdG9vbHMgdG8gL29wdC9iaW4KICAgICAgICBDb25kaXRpb25QYXRoRXhpc3RzPSEvb3B0L2Jpbi9jcmljdGwKICAgICAgICBbU2VydmljZV0KICAgICAgICBUeXBlPW9uZXNob3QKICAgICAgICBSZW1haW5BZnRlckV4aXQ9dHJ1ZQogICAgICAgIFJlc3RhcnQ9b24tZmFpbHVyZQogICAgICAgIEVudmlyb25tZW50PUNSSUNUTF9WRVJTSU9OPXYxLjI0LjAKICAgICAgICBFbnZpcm9ubWVudD1ET1dOTE9BRF9ESVI9L29wdC9iaW4KICAgICAgICBFeGVjU3RhcnRQcmU9L3Vzci9iaW4vbWtkaXIgLS1wYXJlbnRzICIke0RPV05MT0FEX0RJUn0iCiAgICAgICAgRXhlY1N0YXJ0UHJlPS91c3IvYmluL3RhciAtdiAtLWV4dHJhY3QgLS1maWxlICIvb3B0L2NyaWN0bC0ke0NSSUNUTF9WRVJTSU9OfS1saW51eC1hbWQ2NC50YXIuZ3oiIC0tZGlyZWN0b3J5ICIke0RPV05MT0FEX0RJUn0iIC0tbm8tc2FtZS1vd25lcgogICAgICAgIEV4ZWNTdGFydD0vdXNyL2Jpbi9ybSAiL29wdC9jcmljdGwtJHtDUklDVExfVkVSU0lPTn0tbGludXgtYW1kNjQudGFyLmd6IgogICAgICAgIFtJbnN0YWxsXQogICAgICAgIFdhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CgogICAgLSBuYW1lOiBrdWJlbGV0LnNlcnZpY2UKICAgICAgZW5hYmxlZDogdHJ1ZQogICAgICBkcm9waW5zOgogICAgICAgIC0gbmFtZTogMTAta3ViZWFkbS5jb25mCiAgICAgICAgICBjb250ZW50czogfAogICAgICAgICAgICAjIE5vdGU6IFRoaXMgZHJvcGluIG9ubHkgd29ya3Mgd2l0aCBrdWJlYWRtIGFuZCBrdWJlbGV0IHYxLjExKwogICAgICAgICAgICBbU2VydmljZV0KICAgICAgICAgICAgRW52aXJvbm1lbnQ9IktVQkVMRVRfS1VCRUNPTkZJR19BUkdTPS0tYm9vdHN0cmFwLWt1YmVjb25maWc9L2V0Yy9rdWJlcm5ldGVzL2Jvb3RzdHJhcC1rdWJlbGV0LmNvbmYgLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlbGV0LmNvbmYiCiAgICAgICAgICAgIEVudmlyb25tZW50PSJLVUJFTEVUX0NPTkZJR19BUkdTPS0tY29uZmlnPS92YXIvbGliL2t1YmVsZXQvY29uZmlnLnlhbWwiCiAgICAgICAgICAgICMgVGhpcyBpcyBhIGZpbGUgdGhhdCAia3ViZWFkbSBpbml0IiBhbmQgImt1YmVhZG0gam9pbiIgZ2VuZXJhdGVzIGF0IHJ1bnRpbWUsIHBvcHVsYXRpbmcgdGhlIEtVQkVMRVRfS1VCRUFETV9BUkdTIHZhcmlhYmxlIGR5bmFtaWNhbGx5CiAgICAgICAgICAgIEVudmlyb25tZW50RmlsZT0tL3Zhci9saWIva3ViZWxldC9rdWJlYWRtLWZsYWdzLmVudgogICAgICAgICAgICAjIFRoaXMgaXMgYSBmaWxlIHRoYXQgdGhlIHVzZXIgY2FuIHVzZSBmb3Igb3ZlcnJpZGVzIG9mIHRoZSBrdWJlbGV0IGFyZ3MgYXMgYSBsYXN0IHJlc29ydC4gUHJlZmVyYWJseSwgdGhlIHVzZXIgc2hvdWxkIHVzZQogICAgICAgICAgICAjIHRoZSAuTm9kZVJlZ2lzdHJhdGlvbi5LdWJlbGV0RXh0cmFBcmdzIG9iamVjdCBpbiB0aGUgY29uZmlndXJhdGlvbiBmaWxlcyBpbnN0ZWFkLiBLVUJFTEVUX0VYVFJBX0FSR1Mgc2hvdWxkIGJlIHNvdXJjZWQgZnJvbSB0aGlzIGZpbGUuCiAgICAgICAgICAgIEVudmlyb25tZW50RmlsZT0tL2V0Yy9kZWZhdWx0L2t1YmVsZXQKICAgICAgICAgICAgRXhlY1N0YXJ0PQogICAgICAgICAgICBFeGVjU3RhcnQ9L29wdC9iaW4va3ViZWxldCAkS1VCRUxFVF9LVUJFQ09ORklHX0FSR1MgJEtVQkVMRVRfQ09ORklHX0FSR1MgJEtVQkVMRVRfS1VCRUFETV9BUkdTICRLVUJFTEVUX0VYVFJBX0FSR1MKCiAgICAgIGNvbnRlbnRzOiB8CiAgICAgICAgW1VuaXRdCiAgICAgICAgRGVzY3JpcHRpb249a3ViZWxldDogVGhlIEt1YmVybmV0ZXMgTm9kZSBBZ2VudAogICAgICAgIERvY3VtZW50YXRpb249aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvaG9tZS8KICAgICAgICBXYW50cz1uZXR3b3JrLW9ubGluZS50YXJnZXQKICAgICAgICBBZnRlcj1uZXR3b3JrLW9ubGluZS50YXJnZXQKCiAgICAgICAgW1NlcnZpY2VdCiAgICAgICAgRXhlY1N0YXJ0PS9vcHQvYmluL2t1YmVsZXQKICAgICAgICBSZXN0YXJ0PWFsd2F5cwogICAgICAgIFN0YXJ0TGltaXRJbnRlcnZhbD0wCiAgICAgICAgUmVzdGFydFNlYz0xMAoKICAgICAgICBbSW5zdGFsbF0KICAgICAgICBXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldAoKc3RvcmFnZToKICBmaWxlczoKICAgICMKICAgICMgU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vZmxhdGNhci1saW51eC9tYW50bGUvYmxvYi9mbGF0Y2FyLW1hc3Rlci9rb2xhL3Rlc3RzL2t1YmVhZG0vdGVtcGxhdGVzLmdvI0w2Ny1MNzYKICAgICMgCiAgICAtIHBhdGg6IC9vcHQvY25pLXBsdWdpbnMtbGludXgtYW1kNjQtdjEuMS4xLnRnegogICAgICBmaWxlc3lzdGVtOiByb290CiAgICAgIG1vZGU6IDA2NDQKICAgICAgY29udGVudHM6CiAgICAgICAgcmVtb3RlOgogICAgICAgICAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20vY29udGFpbmVybmV0d29ya2luZy9wbHVnaW5zL3JlbGVhc2VzL2Rvd25sb2FkL3YxLjEuMS9jbmktcGx1Z2lucy1saW51eC1hbWQ2NC12MS4xLjEudGd6CgogICAgIwogICAgIyBTb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9mbGF0Y2FyLWxpbnV4L21hbnRsZS9ibG9iL2ZsYXRjYXItbWFzdGVyL2tvbGEvdGVzdHMva3ViZWFkbS90ZW1wbGF0ZXMuZ28jTDc3LUw4NgogICAgIwogICAgLSBwYXRoOiAvb3B0L2NyaWN0bC12MS4yNC4wLWxpbnV4LWFtZDY0LnRhci5negogICAgICBmaWxlc3lzdGVtOiByb290CiAgICAgIG1vZGU6IDA2NDQKICAgICAgY29udGVudHM6CiAgICAgICAgcmVtb3RlOgogICAgICAgICAgdXJsOiBodHRwczovL2dpdGh1Yi5jb20va3ViZXJuZXRlcy1zaWdzL2NyaS10b29scy9yZWxlYXNlcy9kb3dubG9hZC92MS4yNC4wL2NyaWN0bC12MS4yNC4wLWxpbnV4LWFtZDY0LnRhci5negoKCiAgICAjCiAgICAjIEt1YmVybmV0ZXMgVG9vbHMKICAgICMKICAgICMgVE9ETzogQXV0b21hdGUgdGhpcyB3aXRoIEFyZ29DRCBXb3JrZmxvd3MvQ3Jvc3NwbGFuZS9TY3JpcHRzL0hlbG0vT0FNL0JhY2tzdGFnZS9DUk9OCiAgICAjCiAgICAtIHBhdGg6IC9vcHQvYmluL2t1YmVsZXQKICAgICAgZmlsZXN5c3RlbTogcm9vdAogICAgICBjb250ZW50czoKICAgICAgICByZW1vdGU6CiAgICAgICAgICB1cmw6IGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9rdWJlcm5ldGVzLXJlbGVhc2UvcmVsZWFzZS92MS4yMy42L2Jpbi9saW51eC9hbWQ2NC9rdWJlbGV0CiAgICAgIG1vZGU6IDA3NzcKCiAgICAtIHBhdGg6IC9vcHQvYmluL2t1YmVhZG0KICAgICAgZmlsZXN5c3RlbTogcm9vdAogICAgICBjb250ZW50czoKICAgICAgICByZW1vdGU6CiAgICAgICAgICB1cmw6IGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9rdWJlcm5ldGVzLXJlbGVhc2UvcmVsZWFzZS92MS4yMy42L2Jpbi9saW51eC9hbWQ2NC9rdWJlYWRtCiAgICAgIG1vZGU6IDA3NzcKCiAgICAtIHBhdGg6IC9vcHQvYmluL2t1YmVjdGwKICAgICAgZmlsZXN5c3RlbTogcm9vdAogICAgICBjb250ZW50czoKICAgICAgICByZW1vdGU6CiAgICAgICAgICB1cmw6IGh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9rdWJlcm5ldGVzLXJlbGVhc2UvcmVsZWFzZS92MS4yMy42L2Jpbi9saW51eC9hbWQ2NC9rdWJlY3RsCiAgICAgIG1vZGU6IDA3NzcKCiAgICAjCiAgICAjIEt1YmVsZXQgUGFyYW1zCiAgICAjCiAgICAtIHBhdGg6IC92YXIvbGliL2t1YmVsZXQva3ViZWFkbS1mbGFncy5lbnYKICAgICAgZmlsZXN5c3RlbTogcm9vdAogICAgICBjb250ZW50czoKICAgICAgICBpbmxpbmU6ICdLVUJFTEVUX0tVQkVBRE1fQVJHUz0iLS1jb250YWluZXItcnVudGltZT1yZW1vdGUgLS1jb250YWluZXItcnVudGltZS1lbmRwb2ludD11bml4Oi8vL3J1bi9jb250YWluZXJkL2NvbnRhaW5lcmQuc29jayAtLXBvZC1pbmZyYS1jb250YWluZXItaW1hZ2U9azhzLmdjci5pby9wYXVzZTozLjYiJwogICAgICBtb2RlOiAwNzc3CgogICAgLSBwYXRoOiAvZXRjL3Jlc29sdi5jb25mCiAgICAgIGZpbGVzeXN0ZW06IHJvb3QKICAgICAgY29udGVudHM6CiAgICAgICAgaW5saW5lOiB8CiAgICAgICAgICBuYW1lc2VydmVyIDE3Mi4xOC4wLjEwCiAgICAgICAgICBzZWFyY2ggY29yZS1wcm9kLnN2Yy5jbHVzdGVyLmxvY2FsCiAgICAgIG1vZGU6IDA3NzcKCiAgICAtIHBhdGg6IC9ldGMvc3lzY3RsLmQvazhzLmNvbmYKICAgICAgZmlsZXN5c3RlbTogcm9vdAogICAgICBjb250ZW50czoKICAgICAgICBpbmxpbmU6IHwKICAgICAgICAgIG5ldC5icmlkZ2UuYnJpZGdlLW5mLWNhbGwtaXA2dGFibGVzID0gMQogICAgICAgICAgbmV0LmJyaWRnZS5icmlkZ2UtbmYtY2FsbC1pcHRhYmxlcyA9IDEKICAgICAgbW9kZTogMDc3NwoKICAgIC0gcGF0aDogL2V0Yy9tb2R1bGVzLWxvYWQuZC9rOHMuY29uZgogICAgICBmaWxlc3lzdGVtOiByb290CiAgICAgIGNvbnRlbnRzOgogICAgICAgIGlubGluZTogfAogICAgICAgICAgYnJfbmV0ZmlsdGVyCiAgICAgIG1vZGU6IDA3NzcK'
