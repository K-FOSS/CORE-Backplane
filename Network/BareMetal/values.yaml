controllers:
  main:
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    containers:
      main:
        image:
          repository: ghcr.io/hanazuki/s3tftpd
          tag: latest
          pullPolicy: IfNotPresent

        # -- Override the args for the default container
        args: 
          - --endpoint-url=$(S3_ENDPOINT)
          - s3://$(S3_BUCKET)

        env:
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-s3'
                key: Endpoint

          - name: S3_BUCKET
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-s3'
                key: Bucket

          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-s3'
                key: AccessKey

          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}-s3'
                key: SecretKey

        # -- Override the working directory for the default container
        workingDir: /etc/pdns

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false

  idrac:
    # For Deployments, valid values are Recreate (default) and RollingUpdate.
    # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
    # DaemonSets/CronJobs ignore this.
    strategy: RollingUpdate

    containers:
      main:
        image:
          repository: domistyle/idrac6
          tag: latest
          pullPolicy: IfNotPresent

        env:
          - name: IDRAC_HOST
            value: 172.31.241.234

          - name: IDRAC_USER
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" . }}-dellbmc'
                key: SecretKey

          - name: IDRAC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: '{{ include "bjw-s.common.lib.chart.names.fullname" . }}-dellbmc'
                key: SecretKey


        # -- Override the working directory for the default container
        workingDir: /etc/pdns

        # -- Probe configuration
        # -- [[ref]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
        # @default -- See below
        probes:
          # -- Liveness probe configuration
          # @default -- See below
          liveness:
            # -- Enable the liveness probe
            enabled: false

          # -- Redainess probe configuration
          # @default -- See below
          readiness:
            # -- Enable the readiness probe
            enabled: false

          # -- Startup probe configuration
          # @default -- See below
          startup:
            # -- Enable the startup probe
            enabled: false

service:
  main:
    # -- Enables or disables the service
    enabled: true

    # -- Configure which controller this service should target
    controller: main

    # -- Make this the primary service for this controller (used in probes, notes, etc...).
    # If there is more than 1 service targeting the controller, make sure that only 1 service is
    # marked as primary.
    primary: true

    # -- Set the service type
    type: ClusterIP

    # -- Specify the externalTrafficPolicy for the service. Options: Cluster, Local
    # -- [[ref](https://kubernetes.io/docs/tutorials/services/source-ip/)]
    externalTrafficPolicy: Local

    ports:
      http:
        # -- Enables or disables the port
        enabled: false
      
      tftp-udp:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true

        # -- The port number
        port: 69

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: UDP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol:

  idrac:
    # -- Enables or disables the service
    enabled: true

    # -- Configure which controller this service should target
    controller: idrac

    # -- Set the service type
    type: ClusterIP

    ports:      
      http:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: true

        # -- The port number
        port: 5800

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: HTTP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol: http

      vnc:
        # -- Enables or disables the port
        enabled: true

        # -- Make this the primary port (used in probes, notes, etc...)
        # If there is more than 1 service, make sure that only 1 port is marked as primary.
        primary: false

        # -- The port number
        port: 5900

        # -- Port protocol.
        # Support values are `HTTP`, `HTTPS`, `TCP` and `UDP`.
        # HTTP and HTTPS spawn a TCP service and get used for internal URL and name generation
        protocol: TCP

        # -- Specify the appProtocol value for the Service.
        # [[ref]](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
        appProtocol: rfb

# -- Configure the gateway routes for the chart here.
# Additional routes can be added by adding a dictionary key similar to the 'main' route.
# [[ref]](https://gateway-api.sigs.k8s.io/references/spec/)
# @default -- See below
route:
  nsadmin:
    # -- Enables or disables the route
    enabled: true

    # -- Set the route kind
    # Valid options are GRPCRoute, HTTPRoute, TCPRoute, TLSRoute, UDPRoute
    kind: UDPRoute

    # -- Provide additional annotations which may be required.
    annotations:
      external-dns.alpha.kubernetes.io/hostname: static.mylogin.space

    # -- Provide additional labels which may be required.
    labels:
      wan-mode: 'public'
      lan-mode: 'private'


    # -- Configure the resource the route attaches to.
    parentRefs:
      - # Group of the referent resource.
        group: gateway.networking.k8s.io

        # Kind of the referent resource.
        kind: Gateway

        # Name of the referent resource
        name: main-gw

        sectionName: tftp

        # Namespace of the referent resource
        namespace: kuadrant-core-prod

    # -- Configure rules for routing. Defaults to the primary service.
    rules:
      - backendRefs:
          - kind: Service
            port: 69
            name: main
            weight: 1


stack:
  stack:
    enabled: true
    name: tink-stack
    service:
      enabled: false
      type: ClusterIP

    selector:
      app: tink-stack

    loadBalancerIP: ''

    lbClass: ''

    # Once the Kubernetes Gateway API is more stable, we will use that for all services instead of nginx.
    image: nginx:1.25.1

    hook:
      enabled: true
      name: hook-files
      port: 8080
      image: bash
      downloadsDest: /opt/hook
      # downloadURL only works with the > 0.8.1 Hook release because
      # previous Hook versions didn't provide a checksum file.
      downloadURL: https://github.com/tinkerbell/hook/releases/download/latest
    
    kubevip:
      enabled: false
    
    relay: # relay allows us to listen and respond to layer broadcast DHCP requests
      name: dhcp-relay
      enabled: false

  # -- Overrides
  # The values defined here override those in the individual charts. Some of them require tweaking
  # before deployment as they are environment dependent; others are surfaced for convenience.
  #
  # See individual chart documentation for additional detail.

  smee:
    trustedProxies: ['0.0.0.0/0']
    publicIP: 10.1.1.66
    logLevel: 'debug'
    # Additional environment variables to pass to the smee container. Each entry is expected to have a
    # name and value key. Some keys are already defined - refer to the deployment.yaml template for
    # details.
    #
    # Example
    additionalEnv:
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: 'core-tempo-distributor.core-prod.svc.k0s.resolvemy.host:4317'

      - name: OTEL_EXPORTER_OTLP_INSECURE
        value: 'true'


  hegel:
    image: quay.io/tinkerbell/hegel:v0.11.1
    trustedProxies: ['0.0.0.0/0']

  rufio:
    image: quay.io/tinkerbell/rufio:v0.3.2

  tink:
    controller:
      image: quay.io/tinkerbell/tink-controller:v0.9.0
    server:
      image: quay.io/tinkerbell/tink:v0.9.0


s3-proxy:
  # Default values for s3-proxy.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: oxynozeta/s3-proxy
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: traefik-core-s3-proxy


  service:
    type: ClusterIP
    port: 80
    targetPort: "http"

  ingress:
    enabled: false

  # Custom templates declaration
  # Will be mounted in /proxy/custom-templates
  customTemplates: {}
  #   # Bad Request template example
  #   bad-request.tpl: |-
  #     <!DOCTYPE html>
  #     <html>
  #       <body>
  #         <h1>Bad Request</h1>
  #         <p>{{ .Error }}</p>
  #       </body>
  #     </html>
  #   # Add other template files here

  # Existing secret
  # Will be mounted in /proxy/secret-files
  existingSecret: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}'

  # Secret files for secrets declaration
  # Each key will be mounted in /proxy/secret-files
  secretFiles:
    {}
    # Example
    # my-syper-secret-file: my-awesome-secret

  # Environment variables
  env:
    {}
    # Example
    # VARIABLE: VALUE

  envFrom:
    []
    # Example (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables)
    # - secretRef:
    #     name: mysecret
    # - configMapRef:
    #     name: myconfigmap

  #
  # See configuration of project: https://oxyno-zeta.github.io/s3-proxy/
  #
  # Note: This can put as blank. The application can start without any configuration.
  configFiles:
    config.yaml:
      # Log configuration
      log:
        # Log level
        level: info
        # Log format
        format: json

      # Targets map
      targets:
        first-bucket:
          ## Mount point
          mount:
            path:
              - /
          bucket:
            name: baremetal
            region: us-east-1
            s3Endpoint: https://s3.mylogin.space
            disableSSL: false
            # s3ListMaxKeys: 1000
            credentials:
              accessKey:
                path: /proxy/secret-files/S3AccessKey
              secretKey:
                path: /proxy/secret-files/S3SecretKey

  # Sidecars
  # The full container definition is available here.
  sidecars: []

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # livenessProbe:
  #   initialDelaySeconds: 0
  #   periodSeconds: 10
  #   timeoutSeconds: 1
  #   successThreshold: 1
  #   failureThreshold: 3

  # readinessProbe:
  #   initialDelaySeconds: 0
  #   periodSeconds: 10
  #   timeoutSeconds: 1
  #   successThreshold: 1
  #   failureThreshold: 3

  ## ServiceMonitor configuration in case you are using Prometheus Operator
  prometheus:
    serviceMonitor:
      ## If true a ServiceMonitor for each enabled exporter will be installed
      enabled: false
      ## The namespace where the ServiceMonitor(s) will be installed
      # namespace: monitoring
      ## The selector the Prometheus instance is searching for
      ## [Default Prometheus Operator selector] (https://github.com/helm/charts/blob/f5a751f174263971fafd21eee4e35416d6612a3d/stable/prometheus-operator/templates/prometheus/prometheus.yaml#L74)
      labels: {}
      scheme: http
      # interval: 30s
      # scrapeTimeout: 30s
      # metricRelabelings: []
      # relabelings: []

  # Arbitrary non-identifying metadata for s3-proxy pods.
  podAnnotations:
    {}
    # prometheus.io/scrape: "true"
    # prometheus.io/path: "/metrics"
    # prometheus.io/port: "9090"

  # Extra pod labels.
  podLabels: {}

  grafana:
    # Use this only if you are using the Grafana operator from https://github.com/integr8ly/grafana-operator
    operator:
      enabled: false
      ## The namespace where the GrafanaDashboard will be installed
      # namespace: monitoring
      # Extra labels for selector
      labels: {}
    # Use this only if you are using the Grafana sidecar from kiwigrid/k8s-sidecar
    configmap:
      enabled: false
      ## The namespace where the ConfigMap will be installed
      # namespace: monitoring
      # Extra labels for selector
      labels: {}

  podDisruptionBudget:
    # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    enabled: false
    minAvailable: 1
    maxUnavailable:

  deploymentStrategy:
    {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

  podSecurityContext:
    fsGroup: 1000

  # This is the declaration of the default volumes mount paths
  # in the s3-proxy container in pod.
  # This can be override for sidecar usage for example, init containers, ...
  # Use this with extra volumes feature.
  # Note: This doesn't change the fact that the application will use the /proxy/conf
  # directory to find the configurations.
  volumeMountPaths:
    configurations: /proxy/conf
    secrets: /proxy/secret-files
    customTemplates: /proxy/custom-templates

  # This can be used to declare extra volumes.
  extraVolumes:
    []
    # - name: test
    #   emptyDir: {}

  # This is for extra mounts in the s3-proxy containers only.
  # Sidecars or init containers have their own declarations.
  extraVolumesMounts:
    []
    # - name: test
    #   mountPath: "/test"

  # Init containers declarations.
  initContainers: []

  # Scheduler name
  schedulerName: ""

  # Priority class name.
  priorityClassName: ""
