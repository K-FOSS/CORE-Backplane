apiVersion: tf.upbound.io/v1beta1
kind: ProviderConfig
metadata:
  name: netbox-tf
spec:
  credentials:
    - filename: authentik-credentials
      source: Secret
      secretRef:
        namespace: {{ .Release.Namespace }}
        name: authentik-credentials
        key: Token
  configuration: |

    data "http" "example" {
      url = "http://netbox-ipam.{{ .Release.Namespace }}.svc.cluster.local:80/api/users/tokens/provision/"

      # Optional request headers
      request_headers = {
        Accept = "application/json"
        Content-Type = "application/json"
      }

      request_body = jsonencode(
        {
          "username"="world"
        }
      )
    }

    provider netbox {
      # Environment variable NETBOX_URL
      url = "netbox-ipam.{{ .Release.Namespace }}.svc.cluster.local:80"

      # Environment variable NETBOX_BASEPATH
      basepath = "/api"

      # Environment variable NETBOX_TOKEN
      token = jsondecode(data.http.example.response_body).key

      # Environment variable NETBOX_SCHEME
      scheme = "http"

      # Environment variable NETBOX_INSECURE
      insecure = "true"
    }

    // Modules _must_ use remote state. The provider does not persist state.
    terraform {
      backend "kubernetes" {
        secret_suffix     = "providerconfig-authentik"
        namespace         = "{{ .Release.Namespace }}"
        in_cluster_config = true
      }

      required_providers {
        authentik = {
          source  = "goauthentik/authentik"
          version = "2023.10.0"
        }

        http = {
          source = "hashicorp/http"
          version = "3.4.1"
        }
      }
    }