apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
  name: auth-gw
  namespace: kuadrant-core-prod
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    namespace: kuadrant-core-prod
    name: main-gw

  type: JSONPatch
  jsonPatches:
    - type: type.googleapis.com/envoy.config.listener.v3.Listener
      # The listener name is of the form <GatewayNamespace>/<GatewayName>/<GatewayListenerName>
      name: kuadrant-core-prod/main-gw/https
      operation:
        op: add
        path: /filter_chains/0/filters/0/typed_config/http_filters
        value:
          - name: envoy.filters.http.lua
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  local host = request_handle:headers():get(":authority")
                  local md = request_handle:metadata():get("mykey_flow1")

                  if string.find(host, "-private") then 
                    request_handle:respond({[":status"] = "403"}, "nope")
                  end

                  if md == true then
                    request_handle:streamInfo():dynamicMetadata():set("envoy.filters.http.ext_authz", "mykey_flow", true)
                  end
                end

          - name: envoy.filters.http.ext_authz
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              transport_api_version: V3
              filter_enabled_metadata:
                filter: envoy.filters.http.ext_authz
                path:
                  - key: mykey_flow
                value:
                  bool_match: true
              http_service:
                server_uri:
                  uri: http://authentik-outpost.kube-system.svc.cluster.local
                  cluster: httproute/kube-system/authentik/rule/0
                  timeout: 0.250s
                path_prefix: /outpost.goauthentik.io/auth/envoy
                authorization_request:
                  allowed_headers:
                    patterns:
                      - exact: accept
                      - exact: cookie
                      - exact: proxy-authorization
                authorization_response:
                  allowed_upstream_headers:
                    patterns:
                      - exact: authorization
                      - exact: proxy-authorization
                      - prefix: remote-
                      - prefix: x-authentik-*
                      - prefix: authentik
                  allowed_client_headers:
                    patterns:
                      - exact: set-cookie
                  allowed_client_headers_on_success:
                    patterns:
                      - exact: set-cookie


          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router