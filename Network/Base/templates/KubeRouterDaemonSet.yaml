apiVersion: apps/v1
kind: DaemonSet
metadata:
  generation: 21
  labels:
    app.kubernetes.io/name: kube-router
    app.kubernetes.io/version: v1.4.0
  name: kube-router
  namespace: kube-system
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: k0s-cntrl-core-network-base
      app.kubernetes.io/name: kube-router
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: k0s-cntrl-core-network-base
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-router
        app.kubernetes.io/version: v1.4.0
        helm.sh/chart: kube-router-1.7.0
    spec:
      containers:
        - name: kube-router

          image: 'docker.io/cloudnativelabs/kube-router:v1.5.0'
          imagePullPolicy: IfNotPresent
          args:
            #
            # TODO
            # 
            - '--master='

            - --enable-pprof=false

            #
            # Routes and Syncing
            #
            - --cache-sync-timeout=15s
            - --routes-sync-period=30s

            #
            # Peers
            #
            
            {{- $peerIPs := list -}}
            {{- $peerASNs := list -}}
            {{- $peerPorts := list -}}
            {{ range .Values.peers }}
              {{- $peerIPs = .ip | append $peerIPs -}}
              {{- $peerASNs = .asn | append $peerASNs -}}
              {{- $peerPorts = .port | append $peerPorts  -}}
            {{- end }}
            - --peer-router-ips={{ join "," $peerIPs }}
            - --peer-router-asns={{ join "," $peerASNs }}
            - --peer-router-ports={{ join "," $peerPorts }}
            

            #
            # NAT
            #
            - --masquerade-all=false


            #
            # iBGP
            #
            - --enable-ibgp=false
            - --nodes-full-mesh=false

            # CNI
            - --enable-cni=false
            - --cluster-asn=64512


            # Graceful Restart
            - --bgp-graceful-restart-deferral-time=1m
            - --bgp-graceful-restart=true

            #
            # Route Propagation Rules
            #
            - --advertise-pod-cidr=true
            - --advertise-loadbalancer-ip=true
            - --advertise-external-ip=true
            - --advertise-cluster-ip=true

            #
            # BGP Settings
            #
            - --override-nexthop=true
            - --bgp-port=180

            #
            # Misc Flags
            #
            - --run-router=true
            - --run-firewall=false
            - --run-service-proxy=false
            - --enable-pod-egress=false
            - --enable-overlay=false
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: KUBE_ROUTER_CNI_CONF_FILE
              value: /etc/cni/net.d/10-kuberouter.conflist

          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 20244
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - >-
                  neighbors="$(/usr/local/bin/gobgp neighbor 2>/dev/null | tail
                  -n +2)"; test $(echo "$neighbors" | wc -l) -ge 1; test $(echo
                  "$neighbors" | grep -v ' Establ ' | wc -l) -eq 0
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /etc/cni/net.d
              name: cni-conf-dir
            - mountPath: /run/xtables.lock
              name: xtables-lock
      dnsPolicy: ClusterFirst
      hostNetwork: true
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: k0s-cntrl-core-network-base-kube-router
      serviceAccountName: k0s-cntrl-core-network-base-kube-router
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/controlplane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
      volumes:
        - hostPath:
            path: /lib/modules
            type: ''
          name: lib-modules
        - hostPath:
            path: /etc/cni/net.d
            type: ''
          name: cni-conf-dir
        - configMap:
            defaultMode: 420
            name: k0s-cntrl-core-network-base-kube-router-cfg
          name: kube-router-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock

  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate

