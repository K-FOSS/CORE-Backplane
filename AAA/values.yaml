authentik:
  # -- Server replicas
  replicas: 3

  enabled: true

  ldap:
    enabled: true
    replicas: 2

  common:
    podLabels:
      logs: loki-myloginspace

  priorityClassName: 'tier2-priority'

  worker:
    # -- worker replicas
    replicas: 2

  image:
  #  repository: ghcr.io/goauthentik/dev-server
  #  tag: gh-main-1663317257-3e0778fe313b2e175965ae1ae69584837eede6d6
    pullPolicy: Always
    pullSecrets: []

  # -- See https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common#values
  initContainers: {}

  # -- See https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common#values
  additionalContainers: {}

  podLabels:
    logs: loki-myloginspace

  podAnnotations: {}

  ingress:
    enabled: false

  authentik:
    # -- Log level for server and worker
    log_level: warning

    # -- Mode for the avatars. Defaults to gravatar. Possible options 'gravatar' and 'none'
    avatars: gravatar

    email:
      # -- SMTP Server emails are sent from, fully optional
      host: mail.mylogin.space

      port: 25

      # -- SMTP credentials, when left empty, not authentication will be done
      username: ""

      # -- SMTP credentials, when left empty, not authentication will be done
      password: ""

      # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
      use_tls: false

      # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
      use_ssl: false

      # -- Connection timeout
      timeout: 30

      # -- Email from address, can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
      from: bots@mylogin.space

    outposts:
      # -- Template used for managed outposts. The following placeholders can be used
      # %(type)s - the type of the outpost
      # %(version)s - version of your authentik install
      # %(build_hash)s - only for beta versions, the build hash of the image
      container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s


    error_reporting:
      # -- This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.beryju.org, and is fully opt-in
      enabled: false
      # -- This is a string that is sent to sentry with your error reports
      environment: "k8s"
      # -- Send PII (Personally identifiable information) data to sentry
      send_pii: false


    postgresql:
      # -- set the postgresql hostname to talk to
      # if unset and .Values.postgresql.enabled == true, will generate the default
      # @default -- `{{ .Release.Name }}-postgresql`
      host: 10.1.1.38
      password: ""
      port: 5432
      name: 

    redis:
      # -- set the redis hostname to talk to
      # @default -- `{{ .Release.Name }}-redis-master`
      host: 10.1.1.68
      password: ""

  # -- see configuration options at https://goauthentik.io/docs/installation/configuration/
  env:
    AUTHENTIK_REDIS__CACHE_DB: '1'
    AUTHENTIK_REDIS__MESSAGE_QUEUE_DB: '2'
    AUTHENTIK_REDIS__WS_DB: '3'
    AUTHENTIK_REDIS__OUTPOST_SESSION_DB: '4'
  # AUTHENTIK_VAR_NAME: VALUE

  envFrom: []

  envValueFrom:
    AUTHENTIK_SECRET_KEY:
      secretKeyRef:
        key: SecretKey
        name: authentik-database-prod

    AUTHENTIK_POSTGRESQL__NAME:
      secretKeyRef:
        key: DatabaseDatabase
        name: authentik-database-prod

    AUTHENTIK_POSTGRESQL__USER:
      secretKeyRef:
        key: DatabaseUser
        name: authentik-database-prod

    AUTHENTIK_POSTGRESQL__PASSWORD:
      secretKeyRef:
        key: DatabasePassword
        name: authentik-database-prod


  service:
    # -- Service that is created to access authentik
    enabled: true
    type: ClusterIP
    sessionAffinity: ClientIP
    port: 80
    name: http
    protocol: TCP

  volumes: []

  volumeMounts: []

  # -- affinity applied to the deployments
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - authentik
            topologyKey: kubernetes.io/hostname

  # -- nodeSelector applied to the deployments
  nodeSelector: {}

  resources:
    server: {}
    worker: {}

  # WARNING! When initially deploying, authentik has to do a few DB migrations. This may cause it to die from probe
  # failure, but will continue on reboot. You can disable this during deployment if this is not desired
  livenessProbe:
    # -- enables or disables the livenessProbe
    enabled: true
    httpGet:
      # -- liveness probe url path
      path: /-/health/live/
      port: http
    initialDelaySeconds: 50
    periodSeconds: 30
    failureThreshold: 5
    timeoutSeconds: 5

  readinessProbe:
    enabled: true
    httpGet:
      path: /-/health/ready/
      port: http
    initialDelaySeconds: 50
    periodSeconds: 10

  serviceAccount:
    # -- Service account is needed for managed outposts
    create: false

    name: ''

  prometheus:
    serviceMonitor:
      create: true
      interval: 30s
      scrapeTimeout: 3s
    rules:
      create: true

  postgresql:
    # -- enable the bundled bitnami postgresql chart
    enabled: false

  redis:
    # -- enable the bundled bitnami redis chart
    enabled: false
    architecture: standalone
    auth:
      enabled: false

openldap:
  tls:
    secretName: myloginspace-default-certificates
