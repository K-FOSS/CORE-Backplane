apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-pomerium-helm
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
            loadBalancerIP: 10.1.1.71
  template:
    metadata:
      name: '{{cluster}}-pomerium-helm'
    spec:
      project: core
      ignoreDifferences:
        - kind: Secret
          name: myloginspace-int-default-certificates
          jqPathExpressions:
            - .data
      syncPolicy:
        automated:
          selfHeal: true
      source:
        repoURL: https://helm.pomerium.io
        chart: pomerium
        path: pomerium
        targetRevision: 29.0.2
        helm:
          releaseName: pomerium-core
          values: |
            authenticate:
              existingTLSSecret: pomerium-tls
              idp:
                provider: oidc
                url: https://idp.mylogin.space/application/o/pomeriumproxy-auth/
              proxied: false
              replicaCount: 2

            authorize:
              existingTLSSecret: pomerium-tls

            config:
              administrators: k@kristianjones.dev
              existingSharedSecret: pomerium-secrets
              existingSigningKeySecret: pomerium-signing-key
              extraOpts:
                jwt_claims_headers: email,groups,user,nickname
              forceGenerateServiceSecrets: false
              forceGenerateSigningKey: false
              forceGenerateTLS: false
              generateSigningKey: false
              existingCASecret: pomerium-tls
              generateTLS: false
              insecure: false
              insecureProxy: false
              rootDomain: int.mylogin.space
              sharedSecret: ''
              signingKey: ''

            databroker:
              existingTLSSecret: pomerium-tls
              service:
                annotations: {}
                clusterIP: None
                type: ClusterIP
              storage:
                connectionString: redis://10.1.1.68:6379/5
                tlsSkipVerify: false
                type: redis

            extraArgs: {}
            extraEnv: {}

            forwardAuth:
              enabled: true
              internal: true

            fullnameOverride: ''

            ingress:
              enabled: true
              className: traefik-core
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
                traefik.ingress.kubernetes.io/router.tls: "true"
              secret:
                name: myloginspace-int-default-certificates
              tls:
                hosts:
                  - '*.int.mylogin.space'

            ingressController:
              config:
                operatorMode: true
                updateStatus: true
                ingressClass: 'traefik.io/ingress-controller'
              ingressClassResource:
                enabled: false
                name: traefik-core

              enabled: true

            metrics:
              enabled: false
              port: 9090

            proxy:
              existingTLSSecret: pomerium-tls

            rbac:
              create: true

            redis:
              enabled: false

            replicaCount: 2
            serviceMonitor:
              enabled: false
            tracing:
              debug: false
              enabled: false
              jaeger:
                agent_endpoint: http.distributor.tempo.service.kjdev:6831
                collector_endpoint: http://http.distributor.tempo.service.kjdev:14268/api/traces
              provider: jaeger

      destination:
        server: '{{url}}'
        namespace: core-prod
