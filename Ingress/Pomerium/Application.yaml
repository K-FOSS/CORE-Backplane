apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-pomerium-helm
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
            loadBalancerIP: 10.1.1.71
          - cluster: k0s-home1
            url: https://k0s-home1-kubernetes-default.service.home1.kjdev:6443
            loadBalancerIP: 10.1.1.72
  template:
    metadata:
      name: '{{cluster}}-pomerium-helm'
    spec:
      project: core
      syncPolicy:
        automated: {}
      source:
        repoURL: https://helm.pomerium.io
        chart: pomerium
        path: pomerium
        targetRevision: 30.0.1
        helm:
          releaseName: pomerium-core
          values: |
            apiProxy:
              enabled: false
              fullNameOverride: ''
              ingress: true
              name: kubernetes

            authenticate:
              autoscaling:
                enabled: false
              deployment:
                annotations: {}
                extraEnv: {}
                podAnnotations: {}
              idp:
                provider: oidc
                url: https://idp.mylogin.space/application/o/pomeriumproxy-auth/
              ingress:
                annotations:
                  external-dns.alpha.kubernetes.io/access: public
                tls:
                  secretName: pomerium-authenticate-certs
              name: ''
              nameOverride: ''
              pdb:
                enabled: false
                minAvailable: 1
              proxied: false
              replicaCount: 0
              service:
                annotations: {}
                nodePort: ''
                type: ClusterIP
              serviceAccount:
                annotations: {}
                nameOverride: ''
              tls:
                cert: ''
                defaultIPList: null
                defaultSANList: null
                key: ''

            authorize:
              autoscaling:
                enabled: false
                maxReplicas: 1
                minReplicas: 1
                targetCPUUtilizationPercentage: 50
                targetMemoryUtilizationPercentage: 50
              deployment:
                annotations: {}
                extraEnv: {}
                podAnnotations: {}
              existingTLSSecret: pomerium-tls
              fullnameOverride: ''
              nameOverride: ''
              pdb:
                enabled: false
                minAvailable: 1
              replicaCount: 0
              service:
                annotations: {}
                clusterIP: None
                type: ClusterIP
              serviceAccount:
                annotations: {}
                nameOverride: ''
              tls:
                cert: ''
                defaultIPList: null
                defaultSANList: null
                key: ''

            cache:
              fullnameOverride: ''
              nameOverride: ''

            config:
              administrators: k@kristianjones.dev
              ca:
                cert: ''
                key: ''
              cookieSecret: ''
              existingCASecret: pomerium-tls
              existingPolicy: ''
              existingSecret: ''
              existingSharedSecret: pomerium-secrets
              existingSigningKeySecret: ''
              extraOpts:
                jwt_claims_headers: email,groups,user,nickname
              extraSecretLabels: {}
              extraSharedSecretLabels: {}
              forceGenerateServiceSecrets: false
              forceGenerateSigningKey: false
              forceGenerateTLS: false
              generateSigningKey: false
              generateTLS: false
              generateTLSAnnotations: {}
              insecure: false
              insecureProxy: false
              rootDomain: int.mylogin.space
              routes:
                - allow_spdy: true
                  allowed_idp_claims:
                    groups:
                      - Server
                      - Network
                  from: https://kube-dash.int.mylogin.space
                  kubernetes_service_account_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  tls_skip_verify: true
                  to: https://kubernetes-dashboard.kubernetes-dashboard.svc.cluster.local
              sharedSecret: ''
              signingKey: ''

            databroker:
              deployment:
                annotations: {}
                extraEnv: {}
                podAnnotations: {}
              existingTLSSecret: pomerium-tls
              fullnameOverride: ''
              nameOverride: ''
              pdb:
                enabled: false
                minAvailable: 1
              replicaCount: 0
              service:
                annotations: {}
                clusterIP: None
                type: ClusterIP
              serviceAccount:
                annotations: {}
                nameOverride: ''
              storage:
                clientTLS:
                  ca: ''
                  cert: ''
                  existingCASecretKey: ca.crt
                  existingSecretName: pomerium-tls
                  key: ''
                connectionString: rediss://pomerium-redis-master.pomerium.svc.cluster.local
                tlsSkipVerify: false
                type: redis
              tls:
                cert: ''
                defaultIPList: null
                defaultSANList: null
                key: ''

            extraArgs: {}
            extraEnv: {}
            extraEnvFrom: null
            extraTLSSecrets: null
            extraVolumeMounts: null
            extraVolumes: null

            forwardAuth:
              enabled: false
              internal: false
              name: ''

            fullnameOverride: ''

            image:
              pullPolicy: IfNotPresent
              repository: pomerium/pomerium
              tag: v0.16.0
            imagePullSecrets: ''
            ingress:
              annotations: {}
              enabled: false
              hosts: null
              pathType: ImplementationSpecific
              secret:
                cert: ''
                key: ''
                name: pomerium-tls
              secretName: ''
              tls:
                hosts: null

            ingressController:
              config:
                ingressClass: pomerium.io/ingress-controller
                namespaces: null
                operatorMode: false
                updateStatus: true
              deployment:
                annotations: {}
                extraEnv: {}
              enabled: false
              fullnameOverride: ''
              image:
                repository: pomerium/ingress-controller
                tag: v0.16.0
              ingressClassResource:
                controllerName: pomerium.io/ingress-controller
                default: false
                enabled: true
                name: pomerium
                parameters: {}
              nameOverride: ''
              service:
                annotations: {}
                type: ClusterIP
              serviceAccount:
                annotations: {}
                nameOverride: ''
              replicaCount: 0

            metrics:
              enabled: false
              port: 9090
            nameOverride: ''
            nodeSelector: {}
            podAnnotations: {}
            podLabels: {}
            priorityClassName: ''
            proxy:
              authenticateServiceUrl: ''
              authorizeInternalUrl: ''
              autoscaling:
                enabled: false
                maxReplicas: 1
                minReplicas: 1
                targetCPUUtilizationPercentage: 50
                targetMemoryUtilizationPercentage: 50
              deployment:
                annotations: {}
                extraEnv: {}
                podAnnotations: {}
              existingTLSSecret: pomerium-tls
              fullnameOverride: ''
              nameOverride: ''
              pdb:
                enabled: false
                minAvailable: 1
              redirectServer: true
              replicaCount: 0
              service:
                annotations:
                  external-dns.alpha.kubernetes.io/access: public
                  external-dns.alpha.kubernetes.io/hostname: proxy.int.mylogin.space
                  purelb.io/service-group: anycast
                nodePort: ''
                type: LoadBalancer
              serviceAccount:
                annotations: {}
                nameOverride: ''
              tls:
                cert: ''
                defaultIPList: null
                defaultSANList: null
                key: ''

            rbac:
              create: true


            redis:
              architecture: replication
              auth:
                enabled: false
                existingSecret: pomerium-redis-password
                existingSecretPasswordKey: password
                password: ''
                sentinel: true
                usePasswordFiles: false
              cluster:
                slaveCount: 1
              clusterDomain: cluster.local
              common:
                exampleValue: common-chart
                global:
                  imagePullSecrets: null
                  redis: {}
              commonAnnotations: {}
              commonConfiguration: |-
                # Enable AOF https://redis.io/topics/persistence#append-only-file
                appendonly yes
                # Disable RDB persistence, AOF persistence already enabled.
                save ""
              commonLabels: {}
              diagnosticMode:
                args:
                  - infinity
                command:
                  - sleep
                enabled: false
              enabled: false
              existingConfigmap: null
              extraDeploy: null
              forceGenerateTLS: false
              fullnameOverride: null
              generateTLS: false
              global:
                imagePullSecrets: null
                redis: {}
              image:
                debug: false
                pullPolicy: IfNotPresent
                pullSecrets: null
                registry: docker.io
                repository: bitnami/redis
                tag: 6.2.4-debian-10-r13
              kubeVersion: null
              master:
                affinity: {}
                args: null
                command: null
                containerPort: 6379
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                customLivenessProbe: {}
                customReadinessProbe: {}
                disableCommands:
                  - FLUSHDB
                  - FLUSHALL
                extraEnvVars: null
                extraFlags: null
                extraVolumeMounts: null
                extraVolumes: null
                hostAliases: null
                initContainers: {}
                lifecycleHooks: {}
                livenessProbe:
                  enabled: true
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 5
                nodeAffinityPreset:
                  key: ''
                  type: ''
                  values: null
                nodeSelector: {}
                persistence:
                  accessModes:
                    - ReadWriteOnce
                  annotations: {}
                  enabled: true
                  path: /data
                  selector: {}
                  size: 8Gi
                  subPath: ''
                podAffinityPreset: ''
                podAnnotations: {}
                podAntiAffinityPreset: soft
                podLabels: {}
                podSecurityContext:
                  enabled: true
                  fsGroup: 1001
                preExecCmds: null
                priorityClassName: ''
                readinessProbe:
                  enabled: true
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  limits: {}
                  requests: {}
                service:
                  annotations: {}
                  externalTrafficPolicy: Cluster
                  loadBalancerSourceRanges: null
                  port: 6379
                  type: ClusterIP
                shareProcessNamespace: false
                sidecars: {}
                spreadConstraints: {}
                terminationGracePeriodSeconds: 30
                tolerations: null
                updateStrategy:
                  rollingUpdate: {}
                  type: RollingUpdate
              metrics:
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                enabled: false
                extraArgs: {}
                image:
                  pullPolicy: IfNotPresent
                  pullSecrets: null
                  registry: docker.io
                  repository: bitnami/redis-exporter
                  tag: 1.24.0-debian-10-r9
                podAnnotations:
                  prometheus.io/port: '9121'
                  prometheus.io/scrape: 'true'
                podLabels: {}
                prometheusRule:
                  additionalLabels: {}
                  enabled: false
                  rules: null
                redisTargetHost: localhost
                resources:
                  limits: {}
                  requests: {}
                sentinel:
                  containerSecurityContext:
                    enabled: true
                    runAsUser: 1001
                  enabled: false
                  extraArgs: {}
                  image:
                    pullPolicy: IfNotPresent
                    pullSecrets: null
                    registry: docker.io
                    repository: bitnami/redis-sentinel-exporter
                    tag: 1.7.1-debian-10-r161
                  resources:
                    limits: {}
                    requests: {}
                  service:
                    annotations: {}
                    externalTrafficPolicy: Cluster
                    loadBalancerIP: ''
                    loadBalancerSourceRanges: null
                    port: 9355
                    type: ClusterIP
                service:
                  annotations: {}
                  externalTrafficPolicy: Cluster
                  loadBalancerIP: ''
                  loadBalancerSourceRanges: null
                  port: 9121
                  type: ClusterIP
                serviceMonitor:
                  additionalLabels: {}
                  enabled: false
                  honorLabels: false
                  interval: 30s
                  relabellings: null
              nameOverride: null
              networkPolicy:
                allowExternal: true
                enabled: false
                extraEgress: null
                extraIngress: null
                ingressNSMatchLabels: {}
                ingressNSPodMatchLabels: {}
              pdb:
                create: false
                minAvailable: 1
              podSecurityPolicy:
                create: false
                enabled: false
              rbac:
                create: false
                rules: null
              replica:
                affinity: {}
                args: null
                autoscaling:
                  enabled: false
                  maxReplicas: 11
                  minReplicas: 1
                command: null
                containerPort: 6379
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                customLivenessProbe: {}
                customReadinessProbe: {}
                disableCommands:
                  - FLUSHDB
                  - FLUSHALL
                extraEnvVars: null
                extraFlags: null
                extraVolumeMounts: null
                extraVolumes: null
                hostAliases: null
                initContainers: {}
                lifecycleHooks: {}
                livenessProbe:
                  enabled: true
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 5
                nodeAffinityPreset:
                  key: ''
                  type: ''
                  values: null
                nodeSelector: {}
                persistence:
                  accessModes:
                    - ReadWriteOnce
                  annotations: {}
                  enabled: true
                  path: /data
                  selector: {}
                  size: 8Gi
                  subPath: ''
                podAffinityPreset: ''
                podAnnotations: {}
                podAntiAffinityPreset: soft
                podLabels: {}
                podSecurityContext:
                  enabled: true
                  fsGroup: 1001
                preExecCmds: null
                priorityClassName: ''
                readinessProbe:
                  enabled: true
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                replicaCount: 1
                resources:
                  limits: {}
                  requests: {}
                service:
                  annotations: {}
                  externalTrafficPolicy: Cluster
                  loadBalancerSourceRanges: null
                  port: 6379
                  type: ClusterIP
                shareProcessNamespace: false
                sidecars: {}
                spreadConstraints: {}
                terminationGracePeriodSeconds: 30
                tolerations: null
                updateStrategy:
                  rollingUpdate: {}
                  type: RollingUpdate
              sentinel:
                args: null
                cleanDelaySeconds: 5
                command: null
                containerPort: 26379
                containerSecurityContext:
                  enabled: true
                  runAsUser: 1001
                customLivenessProbe: {}
                customReadinessProbe: {}
                downAfterMilliseconds: 60000
                enabled: false
                extraVolumeMounts: null
                extraVolumes: null
                failoverTimeout: 18000
                image:
                  debug: false
                  pullPolicy: IfNotPresent
                  pullSecrets: null
                  registry: docker.io
                  repository: bitnami/redis-sentinel
                  tag: 6.2.4-debian-10-r14
                lifecycleHooks: {}
                livenessProbe:
                  enabled: false
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 5
                masterSet: mymaster
                parallelSyncs: 1
                preExecCmds: null
                quorum: 2
                readinessProbe:
                  enabled: false
                  failureThreshold: 5
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  limits: {}
                  requests: {}
                service:
                  annotations: {}
                  externalTrafficPolicy: Cluster
                  loadBalancerSourceRanges: null
                  nodePorts: {}
                  port: 6379
                  sentinelPort: 26379
                  type: ClusterIP
                staticID: false
                terminationGracePeriodSeconds: 30
              serviceAccount:
                annotations: {}
                automountServiceAccountToken: true
                create: true
                name: ''
              sysctl:
                command: null
                enabled: false
                image:
                  pullPolicy: Always
                  pullSecrets: null
                  registry: docker.io
                  repository: bitnami/bitnami-shell
                  tag: 10-debian-10-r112
                mountHostSys: false
                resources:
                  limits: {}
                  requests: {}
              tls:
                authClients: true
                autoGenerated: false
                certCAFilename: ca.crt
                certFilename: tls.crt
                certKeyFilename: tls.key
                certificatesSecret: pomerium-redis-tls
                dhParamsFilename: null
                enabled: false
                existingSecret: null
                certificateSecret: pomerium-redis-tls
              volumePermissions:
                containerSecurityContext:
                  runAsUser: 0
                enabled: false
                image:
                  pullPolicy: Always
                  pullSecrets: null
                  registry: docker.io
                  repository: bitnami/bitnami-shell
                  tag: 10-debian-10-r112
                resources:
                  limits: {}
                  requests: {}
              usePassword: false

            replicaCount: 0

            resources: {}

            service:
              annotations: {}
              externalPort: ''
              grpcTrafficPort:
                nameOverride: ''
              httpTrafficPort:
                nameOverride: ''
              labels: {}

            serviceMonitor:
              enabled: false
              labels:
                release: prometheus
              namespace: ''
            tolerations: null

            tracing:
              debug: true
              enabled: true
              jaeger:
                agent_endpoint: http.distributor.tempo.service.kjdev:6831
                collector_endpoint: http://http.distributor.tempo.service.kjdev:14268/api/traces
              provider: jaeger


      destination:
        server: '{{url}}'
        namespace: core-prod
