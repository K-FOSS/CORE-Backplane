apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: core-mimir

spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: core-mimir

  jwt:
    optional: false
    providers:
      - name: grafana
        issuer: https://idp.mylogin.space/application/o/grafana-test/
        remoteJWKS:
          uri: https://idp.mylogin.space/application/o/grafana-test/jwks/
        claimToHeaders:
          - header: x-scope-orgid
            claim: orgID

        extractFrom:
          cookies:
            - core-token

      - name: mimir
        issuer: https://idp.mylogin.space/application/o/mimir-test/
        remoteJWKS:
          uri: https://idp.mylogin.space/application/o/mimir-test/jwks/
        claimToHeaders:
          - header: x-scope-orgid
            claim: orgID

        extractFrom:
          headers:
            - name: Authorization
              valuePrefix: 'Bearer '
          cookies:
            - session_access_token
          params:
            - token



  # extAuth:
  #   http:
  #     backendRefs:
  #       - name: authorino-authorino-authorization
  #         namespace: authorino-operator
  #         port: 5001
  #     headersToBackend: ["x-current-user"]

  # extAuth:
  #   type: HTTP
  #   http:
  #     host: authentik-outpost.kube-system.
  #     port: 80
  #     path: /outpost.goauthentik.io/auth/envoy
  #     headersToBackend:
  #       - x-authentik

  # authorization:
  #   defaultAction: Deny
  #   rules:
  #     - name: "allow"
  #       action: Allow
  #       principal:
  #         jwt:
  #           provider: grafana
  #           claims:
  #             - name: groups
  #               valueType: StringArray
  #               values: ["Metrics"]


  #     - name: "allow"
  #       action: Allow
  #       principal:
  #         jwt:
  #           provider: authentik
  #           claims:
  #             - name: groups
  #               valueType: StringArray
  #               values: ["Metrics"]