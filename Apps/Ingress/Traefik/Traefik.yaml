apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-traefik-core
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
            loadBalancerIP: 10.1.1.88
  template:
    metadata:
      name: '{{cluster}}-traefik-core'
    spec:
      project: core
      syncPolicy:
        automated:
          selfHeal: true
      source:
        repoURL: 'https://helm.traefik.io/traefik'
        chart: traefik
        path: traefik
        targetRevision: 10.19.4
        helm:
          releaseName: traefik-core
          parameters:
            - name: service.spec.loadBalancerIP
              value: '{{loadBalancerIP}}'
          values: |
            additionalArguments:
              - '--serverstransport.insecureskipverify=true'
              - '--entryPoints.websecure.forwardedHeaders.insecure'
              - '--tracing.jaeger=true'
              - '--tracing.jaeger.samplingType=const'
              - '--tracing.jaeger.localAgentHostPort=k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev:6831'
              - '--tracing.jaeger.samplingParam=1.0'
            
            globalArguments:
              - '--global.checknewversion'
              - '--global.sendanonymoususage'

            env:
              - name: JAEGER_AGENT_HOST
                value: k0s-dc1-tempo-core-tempo-distributed-distributor-core-prod.service.dc1.kjdev

              - name: JAEGER_AGENT_PORT
                value: '6831'

              - name: JAEGER_SAMPLER_TYPE
                value: 'const'

              - name: JAEGER_SAMPLER_PARAM
                value: '1.0'
              
              - name: JAEGER_TAGS
                value: app=traefik-core

            priorityClassName: 'system-cluster-critical'

            securityContext:
              capabilities:
                add:
                  - NET_BIND_SERVICE
              readOnlyRootFilesystem: true
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0

            deployment:
              kind: Deployment
              labels: {}
              minReadySeconds: 15
              podAnnotations: {}
              podLabels: {}
              replicas: 3

            ingressRoute:
              dashboard:
                enabled: true
                # Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
                annotations: {}
                # Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
                labels: {}

            ingressClass:
              enabled: true
              fallbackApiVersion: ''
              isDefaultClass: true

            experimental:
              http3:
                enabled: false

            providers:
              kubernetesCRD:
                allowCrossNamespace: true
                allowExternalNameServices: true
                enabled: true
                namespaces: null
              kubernetesIngress:
                allowExternalNameServices: true
                enabled: true
                namespaces: null
                publishedService:
                  enabled: true

            ports:
              dhcp:
                port: 67
                protocol: UDP
                expose: false

              dns:
                port: 53
                protocol: UDP
                expose: false

              turn:
                port: 3478
                protocol: UDP
                expose: true

              metrics:
                port: 9100
                protocol: TCP
              minio:
                port: 9080
                protocol: TCP

              traefik:
                exposedPort: 9000
                port: 9000
                protocol: TCP
              web:
                exposedPort: 80
                port: 80
                protocol: TCP
              websecure:
                exposedPort: 443
                port: 443
                protocol: TCP
                proxyProtocol:
                  insecure: true
                  trustedIPs:
                    - 0.0.0.0/0
                tls:
                  certResolver: ''
                  domains: null
                  enabled: true
                  options: ''

            service:
              enabled: true
              type: LoadBalancer
              annotations:
                metallb.universe.tf/allow-shared-ip: 'traefik-core'

      destination:
        server: '{{url}}'
        namespace: core-prod
