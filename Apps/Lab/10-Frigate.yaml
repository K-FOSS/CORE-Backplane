apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: core-backplane-lab-kjmedia-frigate
  namespace: argocd
spec:
  destination:
    server: https://10.1.1.40:443
    namespace: lab-prod

  project: core

  syncPolicy:
    automated:
      prune: true
      selfHeal: true

  source:
    repoURL: https://k8s-at-home.com/charts/
    chart: frigate
    path: frigate
    targetRevision: 8.0.0
    helm:
      releaseName: frigate-core
      values: |
        podSecurityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000

        podLabels:
          # sidecar.istio.io/inject: 'true'
          tenant: 'kjmedia'

        podAnnotations: {}
          # sidecar.istio.io/inject: 'true'

        controller:
          replicas: 0

        configmap:
          config:
            # -- Store frigate configuration as a ConfigMap
            enabled: true

            # -- See [docs](https://blakeblackshear.github.io/frigate/) for more details.
            # @default -- see URL to default config
            data:
              config.yml: |
                mqtt:
                  host: k0s-dc1-emqx-core-prod.service.dc1.kjdev
                  user: admin
                  password: public
                cameras:
                  back:
                    ffmpeg:
                      inputs:
                        - path: rtsp://demo:demo@ipvmdemo.dyndns.org:5541/onvif-media/media.amp?profile=profile_1_h264&sessiontimeout=60&streamtype=unicast
                          roles:
                            - detect
                            - rtmp
                    detect:
                      width: 1280
                      height: 720


        affinity:
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution: 
              - labelSelector:
                  matchExpressions:
                    - key: tenant 
                      operator: In 
                      values:
                        - kjmedia 
                topologyKey: kubernetes.io/hostname
          
        resources:
          requests:
            cpu: 128m
            memory: 128Mi
          limits: {}
      
        ingress:
          main:
            enabled: true
            ingressClassName: traefik-core
            labels:
              wan-mode: 'public'
              lan-mode: 'private'
            annotations:
              cert-manager.io/cluster-issuer: kjdev-cluster
              external-dns.alpha.kubernetes.io/target: k0s-dc1.resolvemy.host.
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: 'true'
              traefik.ingress.kubernetes.io/router.middlewares: core-prod-pomerium-auth@kubernetescrd
              ingress.pomerium.io/allowed_idp_claims: '{"groups": ["Media Admins"]}'
            hosts:
              - host: security.kjmedia.stream
                paths:
                  - path: '/'
                    pathType: Prefix
            tls:
              - hosts:
                  - '*.kjmedia.stream'
                secretName: kjmediastream-default-certificates

        env:
          HOST_WHITELIST_ENTRIES: sabnzbd.kjmedia.stream

        persistence:
          data:
            enabled: true
            existingClaim: lab-core-kjmedia-configs
            subPath: Frigate

          media:
            enabled: true
            mountPath: /media
            existingClaim: lab-core-kjmedia-media
