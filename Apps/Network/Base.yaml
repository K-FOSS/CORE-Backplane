apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-network-base
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://10.1.1.40:443
            domain: k0s.resolvemy.host
            apiHost: 10.1.1.40
            apiPort: '443'
            bareMetal: 'true'
            vmware: 'true'
            NICs: 'ens+'
            konnectivity: 'true'
            peers: | 
                - ip: 172.16.51.100
                  asn: 64567
                  port: 179

                - ip: 172.16.52.100
                  asn: 64567
                  port: 179

                - ip: 172.16.53.100
                  asn: 64567
                  port: 179

                - ip: 172.16.54.100
                  asn: 64567
                  port: 179

          - cluster: infra1-dc1
            url: https://172.20.52.1:6443
            domain: cluster.local
            apiHost: 172.20.52.1
            vmware: 'false'
            bareMetal: 'true'
            apiPort: '6443'
            konnectivity: 'false'
            cilium: 'true'
            NICs: 'bond0'
            peers: | 
                - ip: 172.31.241.69
                  asn: 64567
                  port: 179

          - cluster: home1-k8s
            url: https://10.1.1.42:6443
            domain: home1-k8s.resolvemy.host
            bareMetal: 'true'
            vmware: 'false'
            apiHost: 10.1.1.42
            apiPort: '6443'
            konnectivity: 'false'
            NICs: 'eno0'
            peers: | 
                - ip: 192.168.4.10
                  asn: 64567
                  port: 179

          - cluster: cntrl-plane
            url: https://10.1.1.44:6443
            domain: k0s-lab.resolvemy.host
            bareMetal: 'false'
            vmware: 'false'
            apiHost: 10.1.1.44
            apiPort: '6443'
            konnectivity: 'false'
            NICs: 'eno0'
            peers: | 
                - ip: 172.31.241.69
                  asn: 64567
                  port: 179
  
  syncPolicy:
    preserveResourcesOnDeletion: true

  template:
    metadata:
      name: '{{cluster}}-core-network-base'

      annotations:
        argocd.argoproj.io/manifest-generate-paths: .

    spec:
      project: core

      source:
        path: Network/Base
        repoURL: https://gitlab.git.writemy.codes/KJDev/CORE-Backplane.git
        targetRevision: HEAD
        plugin:
          name: argocd-lovely-plugin
          env:
            - name: LOVELY_HELM_MERGE
              value: |- 
                cilium:
                  enabled: {{bareMetal}}
                  k8sServiceHost: '{{ apiHost }}'
                  k8sServicePort: '{{ apiPort }}'

                  devices: '{{NICs}}'
                  
                  # -- Configure N-S k8s service loadbalancing
                  nodePort:
                    # -- Enable the Cilium NodePort service implementation.
                    enabled: true

                    # -- Port range to use for NodePort services.
                    # range: "30000,32767"

                    # -- Set to true to prevent applications binding to service ports.
                    bindProtection: true

                    directRoutingDevice: '{{NICs}}'

                    # -- Append NodePort range to ip_local_reserved_ports if clash with ephemeral
                    # ports is detected.
                    autoProtectPortRange: true

                    # -- Enable healthcheck nodePort server for NodePort services
                    enableHealthCheck: true

                int-dns:
                  clusterDomain: {{ domain }}
                  txtOwnerId: '{{ cluster }}'

                ext-dns:
                  clusterDomain: {{ domain }}
                  txtOwnerId: '{{ cluster }}'

                konnectivity:
                  enabled: {{ konnectivity }}

                kube-router:
                  enabled: {{bareMetal}}

                merbridge:
                  enabled: {{bareMetal}}

                metallb:
                  enabled: {{bareMetal}}

                vmtools:
                  enabled: {{vmware}}
                

                peers:
                {{peers}}

      destination:
        server: '{{url}}'
        namespace: kube-system
