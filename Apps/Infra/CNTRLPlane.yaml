apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-backplane-infra-cntrlplane-k8s
  namespace: argocd
spec:

  generators:
    - list:
        elements:
          - cluster: infra1-dc1
            url: https://172.20.52.1:6443
            servingCluster: 'cntrlplane'

  template:
    metadata:
      name: '{{cluster}}-infra-{{servingCluster}}-k8s'

    spec:
      project: core
    #   syncPolicy:
    #     automated:
    #       selfHeal: true
    #       prune: true

      source:
        path: KubernetesWIP
        repoURL: https://gitlab.git.writemy.codes/KJDev/CoRE-CNTRL.git
        targetRevision: HEAD
        plugin:
          name: argocd-lovely-plugin
          env:
            - name: LOVELY_HELM_MERGE
              value: |-

                tink:
                  enabled: false

                kubernetes:
                  clusterName: k0s-lab.resolvemy.host

                  hostClusterDomain: cluster.local

                  fullnameOverride: cntrl-plane

                  controlPlaneEndpoint:
                  networking:
                    dnsDomain: k0s-lab.resolvemy.host
                    serviceSubnet: 172.18.0.0/16
                    podSubnet: 172.20.52.0/22

                  virtual:
                    enabled: true

                  kine:
                    enabled: true

                    image:
                      repository: docker.io/rancher/kine
                      tag: v0.9.3-amd64
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']

                    extraArgs:
                      endpoint: postgres://kine:<secret:CORE0_SITE1/data/KINE~Password>@psql.service.dc1.kjdev:5432/k8slab?sslmode=disable

                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []


                    port: 6443

                    service:
                      enabled: true
                      type: LoadBalancer # NodePort / LoadBalancer
                      port: 
                      # Specify nodePort for apiserver service (30000-32767)
                      nodePort:
                      labels: {}

                      externalIPs: []

                      annotations: {}

                      loadBalancerIP: 10.1.1.44

                  persistence:
                    enabled: false
                    accessModes:
                      - ReadWriteOnce
                    size: 1Gi
                    # storageClassName: default
                    annotations: {}
                    finalizers:
                      - kubernetes.io/pvc-protection

                    backup:
                      # existingClaim: your-claim
                      # subPath: backups
                      accessModes:
                        - ReadWriteOnce
                      size: 1Gi
                      # storageClassName: default
                      annotations: {}
                      finalizers:
                        - kubernetes.io/pvc-protection

                  etcd:
                    enabled: false

                    image:
                      repository: k8s.gcr.io/etcd
                      tag: 3.5.3-0
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 2

                    resources:
                      requests:
                        cpu: 1024m
                        memory: 2048Mi

                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']


                    extraArgs: {}
                    labels: {}

                    annotations: {}
                    podLabels: {}

                    podAnnotations: {}

                    nodeSelector: {}

                    tolerations: []

                    podAntiAffinity: soft

                    podAntiAffinityTopologyKey: kubernetes.io/hostname

                    affinity: {}

                    extraEnv: []

                    sidecars: []

                    extraVolumes:
                      - name: etcd-snapshot
                        hostPath:
                          # directory location on host
                          path: /mnt/Site1.NAS1.Pool1/Backups/etcd-snapshot.db
                          # this field is optional
                          type: File

                    extraVolumeMounts:
                      - mountPath: /backup/snapshot.db
                        name: etcd-snapshot

                    ports:
                      client: 2379
                      peer: 2380
                      metrics: 2381

                    service:
                      enabled: true
                      type: ClusterIP
                      ports:
                        client: 2379
                        peer: 2380
                        metrics: 2381
                      labels: {}
                      annotations: {}
                      loadBalancerIP:

                    backup:
                      enabled: false
                      schedule: "0 */12 * * *"
                      successfulJobsHistoryLimit: 3
                      failedJobsHistoryLimit: 3
                      extraArgs: #{}
                        debug: true
                      resources:
                        requests:
                          cpu: 100m
                          memory: 128Mi
                        # limits:
                        #   cpu: 100m
                        #   memory: 128Mi

                      labels: {}
                      annotations: {}
                      podLabels: {}
                      podAnnotations: {}
                      nodeSelector: {}
                      tolerations: []
                      podAffinity: soft
                      podAffinityTopologyKey: kubernetes.io/hostname
                      affinity: {}
                      extraEnv: []
                      sidecars: []
                      extraVolumes: []
                      extraVolumeMounts: []

                  apiServer:
                    enabled: true

                    image:
                      repository: k8s.gcr.io/kube-apiserver
                      tag: v1.23.6
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']


                    extraArgs:
                      feature-gates: MixedProtocolLBService=true

                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []


                    port: 6443

                    service:
                      enabled: true
                      type: LoadBalancer # NodePort / LoadBalancer
                      port: 6443
                      # Specify nodePort for apiserver service (30000-32767)
                      nodePort:
                      labels: {}

                      externalIPs: []

                      annotations:
                        consul.hashicorp.com/service-name: k0s-kubeapi
                        metallb.universe.tf/allow-shared-ip: k0s-api

                      loadBalancerIP: 10.1.1.44

                  controllerManager:
                    enabled: true

                    image:
                      repository: k8s.gcr.io/kube-controller-manager
                      tag: v1.23.6
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 1

                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    extraArgs: {}
                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []

                    port: 10257

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']


                    service:
                      enabled: true
                      type: ClusterIP
                      port: 10257
                      labels: {}
                      annotations: {}      
                      loadBalancerIP: ''

                  scheduler:
                    enabled: true

                    image:
                      repository: k8s.gcr.io/kube-scheduler
                      tag: v1.23.6
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 1

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']


                    resources:
                      requests:
                        cpu: 100m
                        memory: 364Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    extraArgs: {}
                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []

                    port: 10259

                    service:
                      enabled: true
                      type: ClusterIP
                      port: 10259
                      labels: {}
                      annotations: {}

                      loadBalancerIP: ''

                  admin:
                    enabled: false

                    image:
                      repository: ghcr.io/kvaps/kubernetes-tools
                      tag: v0.13.4
                      pullPolicy: IfNotPresent
                      pullSecrets: []
                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    job:
                      enabled: true
                      schedule: "0 0 1 */6 *"
                      successfulJobsHistoryLimit: 3
                      failedJobsHistoryLimit: 3

                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []

                  kubeProxy:
                    enabled: false

                  coredns:
                    enabled: false
                    image:
                      repository: coredns/coredns
                      tag: 1.8.6
                      pullPolicy: IfNotPresent
                      pullSecrets: []
                    replicaCount: 0
                    resources:
                      limits:
                        memory: 170Mi
                      requests:
                        cpu: 100m
                        memory: 70Mi

                  konnectivityServer:
                    enabled: true
                    # This controls the protocol between the API Server and the Konnectivity server.
                    # Supported values are "GRPC" and "HTTPConnect".
                    # "GRPC" will deploy konnectivity-server as a sidecar for apiserver
                    # "HTTPConnect" will deploy konnectivity-server as separate deployment
                    mode: HTTPConnect
                    image:
                      repository: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server
                      tag: v0.0.32
                      pullPolicy: IfNotPresent
                      pullSecrets: []

                    replicaCount: 1
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      # limits:
                      #   cpu: 100m
                      #   memory: 128Mi

                    certSANs:
                      dnsNames: ['kubernetes.default.svc.cluster.local', 'kubernetes.default.svc.cluster']
                      ipAddresses: ['10.1.1.44']


                    extraArgs: {}
                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []

                    ports:
                      server: 8131
                      agent: 8132
                      admin: 8133
                      health: 8134

                    service:
                      enabled: true
                      type: LoadBalancer

                      ports:
                        server: 8131
                        agent: 8132
                        admin: 8133

                      externalIPs: []

                      labels: {}

                      annotations:
                        metallb.universe.tf/allow-shared-ip: k0s-api
                        consul.hashicorp.com/service-name: k0s-konnectivity

                      loadBalancerIP: 10.1.1.44

                  konnectivityAgent:
                    enabled: false
                    image:
                      repository: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent
                      tag: v0.0.30
                      pullPolicy: IfNotPresent
                      pullSecrets: []
                    replicaCount: 1
                    hostNetwork: false

                    extraArgs:
                      proxy-server-host: '10.1.1.44'
                      proxy-server-port: '8132'
                    labels: {}
                    annotations: {}
                    podLabels: {}
                    podAnnotations: {}
                    nodeSelector: {}
                    tolerations: []
                    podAntiAffinity: soft
                    podAntiAffinityTopologyKey: kubernetes.io/hostname
                    affinity: {}
                    extraEnv: []
                    sidecars: []
                    extraVolumes: []
                    extraVolumeMounts: []

                    ports:
                      admin: 8133
                      health: 8134

                  # these manifests will be applied inside the cluster
                  extraManifests: {}
                    #namespace.yaml:
                    #  apiVersion: v1
                    #  kind: Namespace
                    #  metadata:
                    #    name: example


      destination:
        server: '{{url}}'
        namespace: core-prod
