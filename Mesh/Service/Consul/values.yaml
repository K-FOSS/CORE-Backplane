consul:
  
  client:
    enabled: false
    exposeGossipPorts: false
    extraConfig: |
      {}
    extraContainers: null
    extraEnvironmentVars: {}
    extraLabels: null
    extraVolumes: null
    grpc: false
    hostNetwork: false
    image: null
    join:
      - 172.20.57.36
    nodeMeta:
      host-ip: ${HOST_IP}
      pod-name: ${HOSTNAME}
    nodeSelector: null
    priorityClassName: ''

    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 100
    serviceAccount:
      annotations: null
    snapshotAgent:
      caCert: null
      configSecret:
        secretKey: null
        secretName: null
      enabled: false
      replicas: 1
      resources:
        limits:
          cpu: 50m
          memory: 50Mi
        requests:
          cpu: 50m
          memory: 50Mi
      serviceAccount:
        annotations: null
    tolerations: ''
    updateStrategy: null
  
  connectInject:
    aclBindingRuleSelector: serviceaccount.name!=default
    aclInjectToken:
      secretKey: null
      secretName: null
    affinity: null
    consulNamespaces:
      consulDestinationNamespace: default
      mirroringK8S: false
      mirroringK8SPrefix: ''
    default: false
    enabled: false
    envoyExtraArgs: null
    failurePolicy: Fail

    k8sAllowNamespaces:
      - '*'
    k8sDenyNamespaces: null
    logLevel: ''
    metrics:
      defaultEnableMerging: false
      defaultEnabled: '-'
      defaultMergedMetricsPort: 20100
      defaultPrometheusScrapePath: /metrics
      defaultPrometheusScrapePort: 20200
    namespaceSelector: |
      matchExpressions:
        - key: "kubernetes.io/metadata.name"
          operator: "NotIn"
          values: ["kube-system","local-path-storage"]
    nodeSelector: null
    overrideAuthMethodName: ''
    priorityClassName: ''
    replicas: 2
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 50Mi
    serviceAccount:
      annotations: null
    sidecarProxy:
      resources:
        limits:
          cpu: null
          memory: null
        requests:
          cpu: null
          memory: null
    tolerations: null
    transparentProxy:
      defaultEnabled: true
      defaultOverwriteProbes: true
  
  controller:
    aclToken:
      secretKey: null
      secretName: null

    enabled: true
    replicas: 1

    logLevel: ''
    priorityClassName: 'system-cluster-critical'

  externalServers:
    enabled: false
    hosts:
      - infra1-dc1-server.core-prod.svc.cluster.local
    httpsPort: 8500
    k8sAuthMethodHost: null
    tlsServerName: null
    useSystemRoots: false

  global:
    enabled: true

    acls:
      createReplicationToken: true
      manageSystemACLs: true

    gossipEncryption:
      autoGenerate: false

    adminPartitions:
      enabled: false


    consulSidecarContainer:
      resources:
        limits:
          cpu: 20m
          memory: 50Mi
        requests:
          cpu: 20m
          memory: 25Mi

    datacenter: dc1
    domain: kjdev

    enableConsulNamespaces: false

    enablePodSecurityPolicies: false

    federation:
      createFederationSecret: false
      enabled: false
      primaryDatacenter: ''
      primaryGateways: null

    logJSON: true
    logLevel: error
    metrics:
      agentMetricsRetentionTime: 1m
      enableAgentMetrics: false
      enableGatewayMetrics: true
      enabled: true

    recursors: null
    secretsBackend:
      vault:
        agentAnnotations: null
        ca:
          secretKey: ''
          secretName: ''
        connectCA:
          additionalConfig: |
            {}
          address: ''
          authMethodPath: kubernetes
          intermediatePKIPath: ''
          rootPKIPath: ''
        consulCARole: ''
        consulClientRole: ''
        consulServerRole: ''
        enabled: false
        manageSystemACLsRole: ''


    systemDefaultRegistry: ''
  
  ingressGateways:
    enabled: false
    gateways:
      - name: ingress-gateway
  
  meshGateway:
    enabled: false
    hostNetwork: false
    hostPort: null
    initCopyConsulContainer:
      resources:
        limits:
          cpu: 50m
          memory: 150Mi
        requests:
          cpu: 50m
          memory: 25Mi
    initServiceInitContainer:
      resources:
        limits:
          cpu: 50m
          memory: 50Mi
        requests:
          cpu: 50m
          memory: 50Mi
    nodeSelector: null
    priorityClassName: ''
    replicas: 2
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 100Mi
    service:
      additionalSpec: null
      annotations: null
      enabled: false
      nodePort: null
      port: 443
      type: ClusterIP
    serviceAccount:
      annotations: null
    tolerations: null
    wanAddress:
      port: 443
      source: ClusterIP
      static: ''
  
  prometheus:
    enabled: false
  
  server:
    affinity: |
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ template "consul.name" . }}
                  release: "{{ .Release.Name }}"
                  component: server

              topologyKey: kubernetes.io/hostname

    annotations: null
    bootstrapExpect: 1
    connect: true

    disruptionBudget:
      enabled: true
      maxUnavailable: null
    enabled: true
    exposeGossipAndRPCPorts: false
    extraLabels: null
    extraVolumes: null
    ports:
      serflan:
        port: 8301
    priorityClassName: 'system-cluster-critical'

  resources:
    requests:
      memory: "100Mi"
      cpu: "100m"
    limits:
      memory: '1'
      cpu: '8G'

    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 100
    serverCert:
      secretName: null
    service:
      annotations: null
    serviceAccount:
      annotations: null
    storage: 10Gi
    storageClass: null
    tolerations: ''
    topologySpreadConstraints: ''
    updatePartition: 0
  
  syncCatalog:
    addK8SNamespaceSuffix: true
    affinity: null
    consulNamespaces:
      consulDestinationNamespace: default
      mirroringK8S: false
      mirroringK8SPrefix: ''

    consulWriteInterval: null
    default: false
    enabled: false
    extraLabels: null
    image: null
    k8sAllowNamespaces:
      - '*'
    k8sPrefix: consul-
    k8sSourceNamespace: null
    k8sTag: null
    logLevel: ''
    nodePortSyncType: InternalOnly
    nodeSelector: null
    priorityClassName: 'system-cluster-critical'
    resources:
      limits:
        cpu: 128m
        memory: 256Mi
      requests:
        cpu: 32m
        memory: 16Mi
    serviceAccount:
      annotations: null
    syncClusterIPServices: true
    toConsul: true
    toK8S: true
    tolerations: null
  
  terminatingGateways:
    enabled: false
  
  ui:
    enabled: true

    ingress:
      enabled: false

    dashboardURLTemplates:
      service: ''

    metrics:
      baseURL: https://metrics.mylogin.space
      enabled: true
      provider: prometheus

    service:
      enabled: true
      port:
        http: 80
        https: 443
      type: ClusterIP
  
  webhookCertManager:
    tolerations: null
