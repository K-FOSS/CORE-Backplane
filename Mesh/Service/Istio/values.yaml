
clusterName: 'k0s'


ingressGateway:
  publicIP: 66.165.222.101  


minecraft-proxy:
  # ref: https://hub.docker.com/r/itzg/docker-bungeecord/
  image:
    repository: itzg/bungeecord
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecret: ""

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 512Mi
      cpu: 500m

  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 3000
    runAsNonRoot: true
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  # Most of these map to environment variables. See Minecraft for details:
  # https://hub.docker.com/r/itzg/docker-bungeecord/
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    timeoutSeconds: 1

  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    timeoutSeconds: 1
  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10

  # initContainers:
  #   - name: do-something
  #     image: busybox
  #     command: ['do', 'something']
  #     volumesMounts:
  #       - name: nfs
  #         mountPath: /mnt/volume
  #         readOnly: true
  initContainers: []

  # sidecarContainers:
  #   - name: do-something
  #     image: busybox
  #     command: ['do', 'something']
  #     volumesMounts:
  #       - name: nfs
  #         mountPath: /mnt/volume
  #         readOnly: true
  sidecarContainers: []


  extraVolumes: []
    # - volumeMounts:
    #     - name: mcproxy-config
    #       mountPath: /home/qumine/config.yml
    #       subPath: config.yml

    #     - name: mcproxy-config
    #       mountPath: /data/plugins/floodgate/config.yml
    #       subPath: config.yml
    #   volumes:
    #     - name: mcproxy-config
    #       configMap:
    #         name: mcproxy-configs
    #         items:
    #           - key: geyserconfig.yml
    #             path: config.yml

  minecraftProxy:
    # This can be one of "BUNGEECORD", "WATERFALL", "VELOCITY", "CUSTOM"
    type: VELOCITY
    # If type is set to BUNGEECORD or WATERFALL, this value overrides the base Jenkins URL
    jenkinsBaseUrl:
    # The Jenkins job ID of the artifact to download and run
    jenkinsJobId: lastStableBuild
    # If set, the job ID is arbitrarily incremented to force upgrade the proxy jar
    jarRevision:
    # This value can be set to a fully qualified URL to download a custom proxy jar
    jarUrl:
    # If set, this value specifies a custom proxy jar located inside the container
    jarFile:
    # If type is set to WATERFALL, use a specific Waterfall release stream
    waterfallVersion: latest
    # If type is set to WATERFALL, use a specific build of Waterfall within the specified version
    waterfallBuildId: latest
    # If type is set to VELOCITY, download and run this version of Velocity
    velocityVersion: latest
    # Check accounts against Minecraft account service.
    onlineMode: true
    # A list of .jar URLs to download into the plugins folder.
    plugins:
      - https://ci.opencollab.dev/job/GeyserMC/job/Geyser/job/master/lastSuccessfulBuild/artifact/bootstrap/velocity/target/Geyser-Velocity.jar
      - https://github.com/ViaVersion/ViaVersion/releases/download/4.7.0/ViaVersion-4.7.0.jar
      - https://ci.opencollab.dev/job/GeyserMC/job/Floodgate/job/master/lastSuccessfulBuild/artifact/velocity/build/libs/floodgate-velocity.jar
    # If you adjust this, you may need to adjust resources.requests above to match.
    memory: 512M
    # General JVM options to be passed to the Minecraft server invocation
    jvmOpts: ""
    # Options like -X that need to proceed general JVM options
    jvmXXOpts: ""
    # DEPRECATED: use top-level rconServiceAnnotations instead
    serviceAnnotations: {}
    serviceType: LoadBalancer
    ## Set the port used if the serviceType is NodePort
    # nodePort:
    loadBalancerIP: 10.1.1.83
    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    # externalTrafficPolicy: Cluster
    externalIPs:
      - 66.165.222.101
    # If set, this overrides the default config file path
    configFilePath: /server/config.yml
    # This can be set to the contents of your config file (only works with yaml currently)
    config: |
      # Config version. Do not change this
      config-version = "2.6"

      # What port should the proxy be bound to? By default, we'll bind to all addresses on port 25577.
      bind = "0.0.0.0:25577"

      # What should be the MOTD? This gets displayed when the player adds your server to
      # their server list. Only MiniMessage format is accepted.
      motd = "<#09add3>A Velocity Server"

      # What should we display for the maximum number of players? (Velocity does not support a cap
      # on the number of players online.)
      show-max-players = 500

      # Should we authenticate players with Mojang? By default, this is on.
      online-mode = true

      # Should the proxy enforce the new public key security standard? By default, this is on.
      force-key-authentication = true

      # If client's ISP/AS sent from this proxy is different from the one from Mojang's
      # authentication server, the player is kicked. This disallows some VPN and proxy
      # connections but is a weak form of protection.
      prevent-client-proxy-connections = false

      # Should we forward IP addresses and other data to backend servers?
      # Available options:
      # - "none":        No forwarding will be done. All players will appear to be connecting
      #                  from the proxy and will have offline-mode UUIDs.
      # - "legacy":      Forward player IPs and UUIDs in a BungeeCord-compatible format. Use this
      #                  if you run servers using Minecraft 1.12 or lower.
      # - "bungeeguard": Forward player IPs and UUIDs in a format supported by the BungeeGuard
      #                  plugin. Use this if you run servers using Minecraft 1.12 or lower, and are
      #                  unable to implement network level firewalling (on a shared host).
      # - "modern":      Forward player IPs and UUIDs as part of the login process using
      #                  Velocity's native forwarding. Only applicable for Minecraft 1.13 or higher.
      player-info-forwarding-mode = "NONE"

      # If you are using modern or BungeeGuard IP forwarding, configure a file that contains a unique secret here.
      # The file is expected to be UTF-8 encoded and not empty.
      forwarding-secret-file = "forwarding.secret"

      # Announce whether or not your server supports Forge. If you run a modded server, we
      # suggest turning this on.
      # 
      # If your network runs one modpack consistently, consider using ping-passthrough = "mods"
      # instead for a nicer display in the server list.
      announce-forge = false

      # If enabled (default is false) and the proxy is in online mode, Velocity will kick
      # any existing player who is online if a duplicate connection attempt is made.
      kick-existing-players = false

      # Should Velocity pass server list ping requests to a backend server?
      # Available options:
      # - "disabled":    No pass-through will be done. The velocity.toml and server-icon.png
      #                  will determine the initial server list ping response.
      # - "mods":        Passes only the mod list from your backend server into the response.
      #                  The first server in your try list (or forced host) with a mod list will be
      #                  used. If no backend servers can be contacted, Velocity won't display any
      #                  mod information.
      # - "description": Uses the description and mod list from the backend server. The first
      #                  server in the try (or forced host) list that responds is used for the
      #                  description and mod list.
      # - "all":         Uses the backend server's response as the proxy response. The Velocity
      #                  configuration is used if no servers could be contacted.
      ping-passthrough = "DISABLED"

      # If not enabled (default is true) player IP addresses will be replaced by <ip address withheld> in logs
      enable-player-address-logging = true

      [servers]
      # Configure your servers here. Each key represents the server's name, and the value
      # represents the IP address of the server to connect to.
      kkshouse = "k0s-cntrl-gaming-kk-minecraft-server.core-prod.svc.k0s.resolvemy.host:25565"

      # In what order we should try servers when a player logs in or is kicked from a server.
      try = [
          "kkshouse"
      ]

      [forced-hosts]
      # Configure your forced hosts here.
      "mc.mylogin.space" = [
          "kkshouse"
      ]

      [advanced]
      # How large a Minecraft packet has to be before we compress it. Setting this to zero will
      # compress all packets, and setting it to -1 will disable compression entirely.
      compression-threshold = 256

      # How much compression should be done (from 0-9). The default is -1, which uses the
      # default level of 6.
      compression-level = -1

      # How fast (in milliseconds) are clients allowed to connect after the last connection? By
      # default, this is three seconds. Disable this by setting this to 0.
      login-ratelimit = 3000

      # Specify a custom timeout for connection timeouts here. The default is five seconds.
      connection-timeout = 5000

      # Specify a read timeout for connections here. The default is 30 seconds.
      read-timeout = 30000

      # Enables compatibility with HAProxy's PROXY protocol. If you don't know what this is for, then
      # don't enable it.
      haproxy-protocol = false

      # Enables TCP fast open support on the proxy. Requires the proxy to run on Linux.
      tcp-fast-open = false

      # Enables BungeeCord plugin messaging channel support on Velocity.
      bungee-plugin-message-channel = true

      # Shows ping requests to the proxy from clients.
      show-ping-requests = false

      # By default, Velocity will attempt to gracefully handle situations where the user unexpectedly
      # loses connection to the server without an explicit disconnect message by attempting to fall the
      # user back, except in the case of read timeouts. BungeeCord will disconnect the user instead. You
      # can disable this setting to use the BungeeCord behavior.
      failover-on-unexpected-server-disconnect = true

      # Declares the proxy commands to 1.13+ clients.
      announce-proxy-commands = true

      # Enables the logging of commands
      log-command-executions = false

      # Enables logging of player connections when connecting to the proxy, switching servers
      # and disconnecting from the proxy.
      log-player-connections = true

      [query]
      # Whether to enable responding to GameSpy 4 query responses or not.
      enabled = false

      # If query is enabled, on what port should the query protocol listen on?
      port = 25577

      # This is the map name that is reported to the query services.
      map = "Velocity"

      # Whether plugins should be shown in query response by default or not
      show-plugins = true

    rcon:
      # If you enable this, make SURE to change your password below.
      enabled: false
      port: 25575
      password: "CHANGEME!"
      serviceType: LoadBalancer
      loadBalancerIP:
      # loadBalancerSourceRanges: []
      ## Set the externalTrafficPolicy in the Service to either Cluster or Local
      # externalTrafficPolicy: Cluster

    extraPorts:

      - name: bedrock
        containerPort: 19132
        protocol: UDP
        service:
          enabled: true
          embedded: true
          port: 19132
          annotations: {}
          type: ClusterIP
        ## Set the external port if the rcon serviceType is NodePort
    #     nodePort:
        loadBalancerIP: ""
        loadBalancerSourceRanges: []
        externalTrafficPolicy: Cluster
        port: 19132
        ingress:
          ingressClassName: nginx
          enabled: false
    #     annotations:
    ## Deprecated way for specifying the ingressClass. Kube.version < 1.18
    ##       kubernetes.io/ingress.class: nginx
    #       kubernetes.io/tls-acme: "true"
    #     hosts:
    #       - name: vote.local
    #         path: /
    #     tls:
    #       - secretName: vote-tls
    #         hosts:
    #           - vote.local

  ## Additional minecraft container environment variables
  ## Values can be either variable values or `valueFrom` yaml
  ##
  extraEnv:
    {}
    # some_variable: some value
    # another_variable:
    #   valueFrom:
    #     fieldRef:
  #       fieldPath: status.hostIP

  persistence:
    ## minecraft data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    dataDir:
      # Set this to false if you don't care to persist state between restarts.
      enabled: true
      # existingClaim: nil
      Size: 1Gi

  podAnnotations: {}

  deploymentAnnotations: {}

  serviceAnnotations:
    metallb.universe.tf/allow-shared-ip: istio

  rconServiceAnnotations: {}

  # Can allow plugins access to the kubernetes api using a service account
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  serviceAccountName:
